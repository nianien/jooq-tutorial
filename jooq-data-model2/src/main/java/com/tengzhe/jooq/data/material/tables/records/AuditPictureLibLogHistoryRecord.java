/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables.records;


import com.tengzhe.jooq.data.material.tables.AuditPictureLibLogHistory;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditPictureLibLogHistoryRecord extends UpdatableRecordImpl<AuditPictureLibLogHistoryRecord> implements Record11<Long, Long, Long, String, Integer, Long, Integer, Integer, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>material.audit_picture_lib_log_history.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>material.audit_picture_lib_log_history.entity_id</code>.
     */
    public void setEntityId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.entity_id</code>.
     */
    public Long getEntityId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>material.audit_picture_lib_log_history.user_id</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>material.audit_picture_lib_log_history.image_url</code>.
     */
    public void setImageUrl(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.image_url</code>.
     */
    public String getImageUrl() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>material.audit_picture_lib_log_history.logic_state</code>.
     */
    public void setLogicState(Integer value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>material.audit_picture_lib_log_history.logic_state</code>.
     */
    public Integer getLogicState() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>material.audit_picture_lib_log_history.version</code>.
     */
    public void setVersion(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.version</code>.
     */
    public Long getVersion() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>material.audit_picture_lib_log_history.state</code>.
     */
    public void setState(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>material.audit_picture_lib_log_history.state</code>.
     */
    public Integer getState() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>material.audit_picture_lib_log_history.state_detail</code>.
     */
    public void setStateDetail(Integer value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>material.audit_picture_lib_log_history.state_detail</code>.
     */
    public Integer getStateDetail() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>material.audit_picture_lib_log_history.audit_type</code>.
     */
    public void setAuditType(String value) {
        set(8, value);
    }

    /**
     * Getter for
     * <code>material.audit_picture_lib_log_history.audit_type</code>.
     */
    public String getAuditType() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>material.audit_picture_lib_log_history.audit_detail</code>.
     */
    public void setAuditDetail(String value) {
        set(9, value);
    }

    /**
     * Getter for
     * <code>material.audit_picture_lib_log_history.audit_detail</code>.
     */
    public String getAuditDetail() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>material.audit_picture_lib_log_history.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for
     * <code>material.audit_picture_lib_log_history.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Long, Long, String, Integer, Long, Integer, Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, Long, Long, String, Integer, Long, Integer, Integer, String, String, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.ENTITY_ID;
    }

    @Override
    public Field<Long> field3() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.IMAGE_URL;
    }

    @Override
    public Field<Integer> field5() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.LOGIC_STATE;
    }

    @Override
    public Field<Long> field6() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.VERSION;
    }

    @Override
    public Field<Integer> field7() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.STATE;
    }

    @Override
    public Field<Integer> field8() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.STATE_DETAIL;
    }

    @Override
    public Field<String> field9() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.AUDIT_TYPE;
    }

    @Override
    public Field<String> field10() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.AUDIT_DETAIL;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.CREATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getEntityId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getImageUrl();
    }

    @Override
    public Integer component5() {
        return getLogicState();
    }

    @Override
    public Long component6() {
        return getVersion();
    }

    @Override
    public Integer component7() {
        return getState();
    }

    @Override
    public Integer component8() {
        return getStateDetail();
    }

    @Override
    public String component9() {
        return getAuditType();
    }

    @Override
    public String component10() {
        return getAuditDetail();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getEntityId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getImageUrl();
    }

    @Override
    public Integer value5() {
        return getLogicState();
    }

    @Override
    public Long value6() {
        return getVersion();
    }

    @Override
    public Integer value7() {
        return getState();
    }

    @Override
    public Integer value8() {
        return getStateDetail();
    }

    @Override
    public String value9() {
        return getAuditType();
    }

    @Override
    public String value10() {
        return getAuditDetail();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public AuditPictureLibLogHistoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value2(Long value) {
        setEntityId(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value4(String value) {
        setImageUrl(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value5(Integer value) {
        setLogicState(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value6(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value7(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value8(Integer value) {
        setStateDetail(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value9(String value) {
        setAuditType(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value10(String value) {
        setAuditDetail(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditPictureLibLogHistoryRecord values(Long value1, Long value2, Long value3, String value4, Integer value5, Long value6, Integer value7, Integer value8, String value9, String value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditPictureLibLogHistoryRecord
     */
    public AuditPictureLibLogHistoryRecord() {
        super(AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY);
    }

    /**
     * Create a detached, initialised AuditPictureLibLogHistoryRecord
     */
    public AuditPictureLibLogHistoryRecord(Long id, Long entityId, Long userId, String imageUrl, Integer logicState, Long version, Integer state, Integer stateDetail, String auditType, String auditDetail, LocalDateTime createTime) {
        super(AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY);

        setId(id);
        setEntityId(entityId);
        setUserId(userId);
        setImageUrl(imageUrl);
        setLogicState(logicState);
        setVersion(version);
        setState(state);
        setStateDetail(stateDetail);
        setAuditType(auditType);
        setAuditDetail(auditDetail);
        setCreateTime(createTime);
    }

    /**
     * Create a detached, initialised AuditPictureLibLogHistoryRecord
     */
    public AuditPictureLibLogHistoryRecord(com.tengzhe.jooq.data.material.tables.pojos.AuditPictureLibLogHistory value) {
        super(AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY);

        if (value != null) {
            setId(value.getId());
            setEntityId(value.getEntityId());
            setUserId(value.getUserId());
            setImageUrl(value.getImageUrl());
            setLogicState(value.getLogicState());
            setVersion(value.getVersion());
            setState(value.getState());
            setStateDetail(value.getStateDetail());
            setAuditType(value.getAuditType());
            setAuditDetail(value.getAuditDetail());
            setCreateTime(value.getCreateTime());
        }
    }
}
