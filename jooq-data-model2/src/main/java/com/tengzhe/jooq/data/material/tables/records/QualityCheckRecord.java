/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables.records;


import com.tengzhe.jooq.data.material.tables.QualityCheck;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QualityCheckRecord extends UpdatableRecordImpl<QualityCheckRecord> implements Record9<Long, LocalDateTime, Long, String, Integer, Long, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>material.quality_check.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>material.quality_check.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>material.quality_check.sample_date</code>.
     */
    public void setSampleDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>material.quality_check.sample_date</code>.
     */
    public LocalDateTime getSampleDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>material.quality_check.user_id</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>material.quality_check.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>material.quality_check.user_name</code>.
     */
    public void setUserName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>material.quality_check.user_name</code>.
     */
    public String getUserName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>material.quality_check.check_state</code>.
     */
    public void setCheckState(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>material.quality_check.check_state</code>.
     */
    public Integer getCheckState() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>material.quality_check.last_checker_id</code>.
     */
    public void setLastCheckerId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>material.quality_check.last_checker_id</code>.
     */
    public Long getLastCheckerId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>material.quality_check.last_checker_name</code>.
     */
    public void setLastCheckerName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>material.quality_check.last_checker_name</code>.
     */
    public String getLastCheckerName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>material.quality_check.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>material.quality_check.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>material.quality_check.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>material.quality_check.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, LocalDateTime, Long, String, Integer, Long, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, LocalDateTime, Long, String, Integer, Long, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return QualityCheck.QUALITY_CHECK.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return QualityCheck.QUALITY_CHECK.SAMPLE_DATE;
    }

    @Override
    public Field<Long> field3() {
        return QualityCheck.QUALITY_CHECK.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return QualityCheck.QUALITY_CHECK.USER_NAME;
    }

    @Override
    public Field<Integer> field5() {
        return QualityCheck.QUALITY_CHECK.CHECK_STATE;
    }

    @Override
    public Field<Long> field6() {
        return QualityCheck.QUALITY_CHECK.LAST_CHECKER_ID;
    }

    @Override
    public Field<String> field7() {
        return QualityCheck.QUALITY_CHECK.LAST_CHECKER_NAME;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return QualityCheck.QUALITY_CHECK.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return QualityCheck.QUALITY_CHECK.MODIFY_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getSampleDate();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getUserName();
    }

    @Override
    public Integer component5() {
        return getCheckState();
    }

    @Override
    public Long component6() {
        return getLastCheckerId();
    }

    @Override
    public String component7() {
        return getLastCheckerName();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component9() {
        return getModifyTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getSampleDate();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getUserName();
    }

    @Override
    public Integer value5() {
        return getCheckState();
    }

    @Override
    public Long value6() {
        return getLastCheckerId();
    }

    @Override
    public String value7() {
        return getLastCheckerName();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value9() {
        return getModifyTime();
    }

    @Override
    public QualityCheckRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public QualityCheckRecord value2(LocalDateTime value) {
        setSampleDate(value);
        return this;
    }

    @Override
    public QualityCheckRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public QualityCheckRecord value4(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public QualityCheckRecord value5(Integer value) {
        setCheckState(value);
        return this;
    }

    @Override
    public QualityCheckRecord value6(Long value) {
        setLastCheckerId(value);
        return this;
    }

    @Override
    public QualityCheckRecord value7(String value) {
        setLastCheckerName(value);
        return this;
    }

    @Override
    public QualityCheckRecord value8(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public QualityCheckRecord value9(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public QualityCheckRecord values(Long value1, LocalDateTime value2, Long value3, String value4, Integer value5, Long value6, String value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QualityCheckRecord
     */
    public QualityCheckRecord() {
        super(QualityCheck.QUALITY_CHECK);
    }

    /**
     * Create a detached, initialised QualityCheckRecord
     */
    public QualityCheckRecord(Long id, LocalDateTime sampleDate, Long userId, String userName, Integer checkState, Long lastCheckerId, String lastCheckerName, LocalDateTime createTime, LocalDateTime modifyTime) {
        super(QualityCheck.QUALITY_CHECK);

        setId(id);
        setSampleDate(sampleDate);
        setUserId(userId);
        setUserName(userName);
        setCheckState(checkState);
        setLastCheckerId(lastCheckerId);
        setLastCheckerName(lastCheckerName);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
    }

    /**
     * Create a detached, initialised QualityCheckRecord
     */
    public QualityCheckRecord(com.tengzhe.jooq.data.material.tables.pojos.QualityCheck value) {
        super(QualityCheck.QUALITY_CHECK);

        if (value != null) {
            setId(value.getId());
            setSampleDate(value.getSampleDate());
            setUserId(value.getUserId());
            setUserName(value.getUserName());
            setCheckState(value.getCheckState());
            setLastCheckerId(value.getLastCheckerId());
            setLastCheckerName(value.getLastCheckerName());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
        }
    }
}
