/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong;


import com.tengzhe.jooq.data.audit_wolong.tables.AccountLogoStateInfo;
import com.tengzhe.jooq.data.audit_wolong.tables.AccountRelation;
import com.tengzhe.jooq.data.audit_wolong.tables.AraMaterialRiskStat;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditAccountTag;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditBlacklistWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditBrandWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditCompeteWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditExcludeCustomer;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditExcludeModelUser;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditExcludeModelWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditExcludeUser;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditExcludeWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditImgWhitelist;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditManualRiskUser;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditMaterialListState;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditPatrolRisk;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditSensitiveUser;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditSensitiveWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditSimilarWord;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditUnitMaterial;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditUserLandingPageRisk;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditWaitAuto;
import com.tengzhe.jooq.data.audit_wolong.tables.AuditWhiteWord;
import com.tengzhe.jooq.data.audit_wolong.tables.CpcFlowMarketWord;
import com.tengzhe.jooq.data.audit_wolong.tables.PictureLib;
import com.tengzhe.jooq.data.audit_wolong.tables.PictureLibStateInfo;
import com.tengzhe.jooq.data.audit_wolong.tables.PictureManualAuditResult;
import com.tengzhe.jooq.data.audit_wolong.tables.TbAuditHistory;
import com.tengzhe.jooq.data.audit_wolong.tables.UcAccount;
import com.tengzhe.jooq.data.audit_wolong.tables.UcContact;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AccountLogoStateInfoRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AccountRelationRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AraMaterialRiskStatRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditAccountTagRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditBlacklistWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditBrandWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditCompeteWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditExcludeCustomerRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditExcludeModelUserRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditExcludeModelWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditExcludeUserRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditExcludeWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditImgWhitelistRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditManualRiskUserRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditMaterialListStateRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditPatrolRiskRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditSensitiveUserRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditSensitiveWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditSimilarWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditUnitMaterialRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditUserLandingPageRiskRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditWaitAutoRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditWhiteWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.CpcFlowMarketWordRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.PictureLibRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.PictureLibStateInfoRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.PictureManualAuditResultRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.TbAuditHistoryRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.UcAccountRecord;
import com.tengzhe.jooq.data.audit_wolong.tables.records.UcContactRecord;

import javax.annotation.processing.Generated;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * audit_wolong.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountLogoStateInfoRecord> CONSTRAINT_80 = Internal.createUniqueKey(AccountLogoStateInfo.ACCOUNT_LOGO_STATE_INFO, DSL.name("CONSTRAINT_80"), new TableField[] { AccountLogoStateInfo.ACCOUNT_LOGO_STATE_INFO.ID }, true);
    public static final UniqueKey<AccountRelationRecord> CONSTRAINT_F = Internal.createUniqueKey(AccountRelation.ACCOUNT_RELATION, DSL.name("CONSTRAINT_F"), new TableField[] { AccountRelation.ACCOUNT_RELATION.ID }, true);
    public static final UniqueKey<AraMaterialRiskStatRecord> CONSTRAINT_83 = Internal.createUniqueKey(AraMaterialRiskStat.ARA_MATERIAL_RISK_STAT, DSL.name("CONSTRAINT_83"), new TableField[] { AraMaterialRiskStat.ARA_MATERIAL_RISK_STAT.ID }, true);
    public static final UniqueKey<AuditAccountTagRecord> CONSTRAINT_8 = Internal.createUniqueKey(AuditAccountTag.AUDIT_ACCOUNT_TAG, DSL.name("CONSTRAINT_8"), new TableField[] { AuditAccountTag.AUDIT_ACCOUNT_TAG.ID }, true);
    public static final UniqueKey<AuditBlacklistWordRecord> CONSTRAINT_97 = Internal.createUniqueKey(AuditBlacklistWord.AUDIT_BLACKLIST_WORD, DSL.name("CONSTRAINT_97"), new TableField[] { AuditBlacklistWord.AUDIT_BLACKLIST_WORD.ID }, true);
    public static final UniqueKey<AuditBrandWordRecord> CONSTRAINT_A = Internal.createUniqueKey(AuditBrandWord.AUDIT_BRAND_WORD, DSL.name("CONSTRAINT_A"), new TableField[] { AuditBrandWord.AUDIT_BRAND_WORD.ID }, true);
    public static final UniqueKey<AuditCompeteWordRecord> CONSTRAINT_3C = Internal.createUniqueKey(AuditCompeteWord.AUDIT_COMPETE_WORD, DSL.name("CONSTRAINT_3C"), new TableField[] { AuditCompeteWord.AUDIT_COMPETE_WORD.ID }, true);
    public static final UniqueKey<AuditExcludeCustomerRecord> CONSTRAINT_DF = Internal.createUniqueKey(AuditExcludeCustomer.AUDIT_EXCLUDE_CUSTOMER, DSL.name("CONSTRAINT_DF"), new TableField[] { AuditExcludeCustomer.AUDIT_EXCLUDE_CUSTOMER.ID }, true);
    public static final UniqueKey<AuditExcludeModelUserRecord> CONSTRAINT_11 = Internal.createUniqueKey(AuditExcludeModelUser.AUDIT_EXCLUDE_MODEL_USER, DSL.name("CONSTRAINT_11"), new TableField[] { AuditExcludeModelUser.AUDIT_EXCLUDE_MODEL_USER.ID }, true);
    public static final UniqueKey<AuditExcludeModelWordRecord> CONSTRAINT_1 = Internal.createUniqueKey(AuditExcludeModelWord.AUDIT_EXCLUDE_MODEL_WORD, DSL.name("CONSTRAINT_1"), new TableField[] { AuditExcludeModelWord.AUDIT_EXCLUDE_MODEL_WORD.ID }, true);
    public static final UniqueKey<AuditExcludeUserRecord> CONSTRAINT_DB = Internal.createUniqueKey(AuditExcludeUser.AUDIT_EXCLUDE_USER, DSL.name("CONSTRAINT_DB"), new TableField[] { AuditExcludeUser.AUDIT_EXCLUDE_USER.ID }, true);
    public static final UniqueKey<AuditExcludeWordRecord> CONSTRAINT_D = Internal.createUniqueKey(AuditExcludeWord.AUDIT_EXCLUDE_WORD, DSL.name("CONSTRAINT_D"), new TableField[] { AuditExcludeWord.AUDIT_EXCLUDE_WORD.ID }, true);
    public static final UniqueKey<AuditImgWhitelistRecord> CONSTRAINT_9 = Internal.createUniqueKey(AuditImgWhitelist.AUDIT_IMG_WHITELIST, DSL.name("CONSTRAINT_9"), new TableField[] { AuditImgWhitelist.AUDIT_IMG_WHITELIST.ID }, true);
    public static final UniqueKey<AuditManualRiskUserRecord> CONSTRAINT_3 = Internal.createUniqueKey(AuditManualRiskUser.AUDIT_MANUAL_RISK_USER, DSL.name("CONSTRAINT_3"), new TableField[] { AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.ID }, true);
    public static final UniqueKey<AuditMaterialListStateRecord> CONSTRAINT_5 = Internal.createUniqueKey(AuditMaterialListState.AUDIT_MATERIAL_LIST_STATE, DSL.name("CONSTRAINT_5"), new TableField[] { AuditMaterialListState.AUDIT_MATERIAL_LIST_STATE.USERID }, true);
    public static final UniqueKey<AuditPatrolRiskRecord> CONSTRAINT_2 = Internal.createUniqueKey(AuditPatrolRisk.AUDIT_PATROL_RISK, DSL.name("CONSTRAINT_2"), new TableField[] { AuditPatrolRisk.AUDIT_PATROL_RISK.ID }, true);
    public static final UniqueKey<AuditSensitiveUserRecord> CONSTRAINT_22A = Internal.createUniqueKey(AuditSensitiveUser.AUDIT_SENSITIVE_USER, DSL.name("CONSTRAINT_22A"), new TableField[] { AuditSensitiveUser.AUDIT_SENSITIVE_USER.ID }, true);
    public static final UniqueKey<AuditSensitiveWordRecord> CONSTRAINT_22 = Internal.createUniqueKey(AuditSensitiveWord.AUDIT_SENSITIVE_WORD, DSL.name("CONSTRAINT_22"), new TableField[] { AuditSensitiveWord.AUDIT_SENSITIVE_WORD.ID }, true);
    public static final UniqueKey<AuditSimilarWordRecord> CONSTRAINT_2C = Internal.createUniqueKey(AuditSimilarWord.AUDIT_SIMILAR_WORD, DSL.name("CONSTRAINT_2C"), new TableField[] { AuditSimilarWord.AUDIT_SIMILAR_WORD.ID }, true);
    public static final UniqueKey<AuditUnitMaterialRecord> CONSTRAINT_7E = Internal.createUniqueKey(AuditUnitMaterial.AUDIT_UNIT_MATERIAL, DSL.name("CONSTRAINT_7E"), new TableField[] { AuditUnitMaterial.AUDIT_UNIT_MATERIAL.ID }, true);
    public static final UniqueKey<AuditUserLandingPageRiskRecord> CONSTRAINT_6 = Internal.createUniqueKey(AuditUserLandingPageRisk.AUDIT_USER_LANDING_PAGE_RISK, DSL.name("CONSTRAINT_6"), new TableField[] { AuditUserLandingPageRisk.AUDIT_USER_LANDING_PAGE_RISK.ID }, true);
    public static final UniqueKey<AuditWaitAutoRecord> CONSTRAINT_7 = Internal.createUniqueKey(AuditWaitAuto.AUDIT_WAIT_AUTO, DSL.name("CONSTRAINT_7"), new TableField[] { AuditWaitAuto.AUDIT_WAIT_AUTO.ID }, true);
    public static final UniqueKey<AuditWhiteWordRecord> CONSTRAINT_64 = Internal.createUniqueKey(AuditWhiteWord.AUDIT_WHITE_WORD, DSL.name("CONSTRAINT_64"), new TableField[] { AuditWhiteWord.AUDIT_WHITE_WORD.ID }, true);
    public static final UniqueKey<CpcFlowMarketWordRecord> CONSTRAINT_44 = Internal.createUniqueKey(CpcFlowMarketWord.CPC_FLOW_MARKET_WORD, DSL.name("CONSTRAINT_44"), new TableField[] { CpcFlowMarketWord.CPC_FLOW_MARKET_WORD.ID }, true);
    public static final UniqueKey<PictureLibRecord> CONSTRAINT_B = Internal.createUniqueKey(PictureLib.PICTURE_LIB, DSL.name("CONSTRAINT_B"), new TableField[] { PictureLib.PICTURE_LIB.ID }, true);
    public static final UniqueKey<PictureLibStateInfoRecord> CONSTRAINT_25 = Internal.createUniqueKey(PictureLibStateInfo.PICTURE_LIB_STATE_INFO, DSL.name("CONSTRAINT_25"), new TableField[] { PictureLibStateInfo.PICTURE_LIB_STATE_INFO.ID }, true);
    public static final UniqueKey<PictureManualAuditResultRecord> CONSTRAINT_37 = Internal.createUniqueKey(PictureManualAuditResult.PICTURE_MANUAL_AUDIT_RESULT, DSL.name("CONSTRAINT_37"), new TableField[] { PictureManualAuditResult.PICTURE_MANUAL_AUDIT_RESULT.ID }, true);
    public static final UniqueKey<TbAuditHistoryRecord> CONSTRAINT_9F = Internal.createUniqueKey(TbAuditHistory.TB_AUDIT_HISTORY, DSL.name("CONSTRAINT_9F"), new TableField[] { TbAuditHistory.TB_AUDIT_HISTORY.ID }, true);
    public static final UniqueKey<UcAccountRecord> CONSTRAINT_4 = Internal.createUniqueKey(UcAccount.UC_ACCOUNT, DSL.name("CONSTRAINT_4"), new TableField[] { UcAccount.UC_ACCOUNT.USERID }, true);
    public static final UniqueKey<UcContactRecord> CONSTRAINT_C = Internal.createUniqueKey(UcContact.UC_CONTACT, DSL.name("CONSTRAINT_C"), new TableField[] { UcContact.UC_CONTACT.USERID }, true);
}
