/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit;


import com.tengzhe.jooq.data.naudit.tables.AgentSelfInspectionHistory;
import com.tengzhe.jooq.data.naudit.tables.AraIllegalClue;
import com.tengzhe.jooq.data.naudit.tables.AraIllegalMaterial;
import com.tengzhe.jooq.data.naudit.tables.AuditComment;
import com.tengzhe.jooq.data.naudit.tables.AuditCrmOrderUrl;
import com.tengzhe.jooq.data.naudit.tables.AuditInfoLog;
import com.tengzhe.jooq.data.naudit.tables.AuditInfoStat;
import com.tengzhe.jooq.data.naudit.tables.AuditSpecialAgent;
import com.tengzhe.jooq.data.naudit.tables.AuditSpecialUser;
import com.tengzhe.jooq.data.naudit.tables.AuditTag;
import com.tengzhe.jooq.data.naudit.tables.AuditTagRelation;
import com.tengzhe.jooq.data.naudit.tables.AuditTagRelationHistory;
import com.tengzhe.jooq.data.naudit.tables.AuditTagTypeConfig;
import com.tengzhe.jooq.data.naudit.tables.AuditUserWhiteDomain;
import com.tengzhe.jooq.data.naudit.tables.AuditorTaskAllocation;
import com.tengzhe.jooq.data.naudit.tables.AuditorTaskAllocationHistory;
import com.tengzhe.jooq.data.naudit.tables.CampaignUserUrl;
import com.tengzhe.jooq.data.naudit.tables.CrmOrderUrl;
import com.tengzhe.jooq.data.naudit.tables.DspAdvertiser;
import com.tengzhe.jooq.data.naudit.tables.ExceptionLog;
import com.tengzhe.jooq.data.naudit.tables.ExpiredCommentWarnTask;
import com.tengzhe.jooq.data.naudit.tables.Qualification;
import com.tengzhe.jooq.data.naudit.tables.QualificationConfig;
import com.tengzhe.jooq.data.naudit.tables.QualificationRelation;
import com.tengzhe.jooq.data.naudit.tables.RuleEvaluateDetail;
import com.tengzhe.jooq.data.naudit.tables.UcAccount;
import com.tengzhe.jooq.data.naudit.tables.UcRelation;
import com.tengzhe.jooq.data.naudit.tables.UrlSnapshot;
import com.tengzhe.jooq.data.naudit.tables.WebTaskInstance;
import com.tengzhe.jooq.data.naudit.tables.records.AgentSelfInspectionHistoryRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AraIllegalClueRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AraIllegalMaterialRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditCommentRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditCrmOrderUrlRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditInfoLogRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditInfoStatRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditSpecialAgentRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditSpecialUserRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditTagRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditTagRelationHistoryRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditTagRelationRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditTagTypeConfigRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditUserWhiteDomainRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditorTaskAllocationHistoryRecord;
import com.tengzhe.jooq.data.naudit.tables.records.AuditorTaskAllocationRecord;
import com.tengzhe.jooq.data.naudit.tables.records.CampaignUserUrlRecord;
import com.tengzhe.jooq.data.naudit.tables.records.CrmOrderUrlRecord;
import com.tengzhe.jooq.data.naudit.tables.records.DspAdvertiserRecord;
import com.tengzhe.jooq.data.naudit.tables.records.ExceptionLogRecord;
import com.tengzhe.jooq.data.naudit.tables.records.ExpiredCommentWarnTaskRecord;
import com.tengzhe.jooq.data.naudit.tables.records.QualificationConfigRecord;
import com.tengzhe.jooq.data.naudit.tables.records.QualificationRecord;
import com.tengzhe.jooq.data.naudit.tables.records.QualificationRelationRecord;
import com.tengzhe.jooq.data.naudit.tables.records.RuleEvaluateDetailRecord;
import com.tengzhe.jooq.data.naudit.tables.records.UcAccountRecord;
import com.tengzhe.jooq.data.naudit.tables.records.UcRelationRecord;
import com.tengzhe.jooq.data.naudit.tables.records.UrlSnapshotRecord;
import com.tengzhe.jooq.data.naudit.tables.records.WebTaskInstanceRecord;

import javax.annotation.processing.Generated;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * naudit.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AgentSelfInspectionHistoryRecord> CONSTRAINT_EC = Internal.createUniqueKey(AgentSelfInspectionHistory.AGENT_SELF_INSPECTION_HISTORY, DSL.name("CONSTRAINT_EC"), new TableField[] { AgentSelfInspectionHistory.AGENT_SELF_INSPECTION_HISTORY.ID }, true);
    public static final UniqueKey<AraIllegalClueRecord> CONSTRAINT_A = Internal.createUniqueKey(AraIllegalClue.ARA_ILLEGAL_CLUE, DSL.name("CONSTRAINT_A"), new TableField[] { AraIllegalClue.ARA_ILLEGAL_CLUE.ID }, true);
    public static final UniqueKey<AraIllegalMaterialRecord> CONSTRAINT_3E = Internal.createUniqueKey(AraIllegalMaterial.ARA_ILLEGAL_MATERIAL, DSL.name("CONSTRAINT_3E"), new TableField[] { AraIllegalMaterial.ARA_ILLEGAL_MATERIAL.ID }, true);
    public static final UniqueKey<AuditCommentRecord> CONSTRAINT_3 = Internal.createUniqueKey(AuditComment.AUDIT_COMMENT, DSL.name("CONSTRAINT_3"), new TableField[] { AuditComment.AUDIT_COMMENT.ID }, true);
    public static final UniqueKey<AuditCrmOrderUrlRecord> CONSTRAINT_F = Internal.createUniqueKey(AuditCrmOrderUrl.AUDIT_CRM_ORDER_URL, DSL.name("CONSTRAINT_F"), new TableField[] { AuditCrmOrderUrl.AUDIT_CRM_ORDER_URL.ID, AuditCrmOrderUrl.AUDIT_CRM_ORDER_URL.TYPE, AuditCrmOrderUrl.AUDIT_CRM_ORDER_URL.AUDIT_TYPE }, true);
    public static final UniqueKey<AuditInfoLogRecord> CONSTRAINT_6B = Internal.createUniqueKey(AuditInfoLog.AUDIT_INFO_LOG, DSL.name("CONSTRAINT_6B"), new TableField[] { AuditInfoLog.AUDIT_INFO_LOG.ID }, true);
    public static final UniqueKey<AuditInfoStatRecord> CONSTRAINT_1D = Internal.createUniqueKey(AuditInfoStat.AUDIT_INFO_STAT, DSL.name("CONSTRAINT_1D"), new TableField[] { AuditInfoStat.AUDIT_INFO_STAT.ID }, true);
    public static final UniqueKey<AuditSpecialAgentRecord> CONSTRAINT_32 = Internal.createUniqueKey(AuditSpecialAgent.AUDIT_SPECIAL_AGENT, DSL.name("CONSTRAINT_32"), new TableField[] { AuditSpecialAgent.AUDIT_SPECIAL_AGENT.ID }, true);
    public static final UniqueKey<AuditSpecialUserRecord> CONSTRAINT_E0 = Internal.createUniqueKey(AuditSpecialUser.AUDIT_SPECIAL_USER, DSL.name("CONSTRAINT_E0"), new TableField[] { AuditSpecialUser.AUDIT_SPECIAL_USER.ID }, true);
    public static final UniqueKey<AuditTagRecord> CONSTRAINT_B = Internal.createUniqueKey(AuditTag.AUDIT_TAG, DSL.name("CONSTRAINT_B"), new TableField[] { AuditTag.AUDIT_TAG.ID }, true);
    public static final UniqueKey<AuditTagRelationRecord> CONSTRAINT_41 = Internal.createUniqueKey(AuditTagRelation.AUDIT_TAG_RELATION, DSL.name("CONSTRAINT_41"), new TableField[] { AuditTagRelation.AUDIT_TAG_RELATION.ID }, true);
    public static final UniqueKey<AuditTagRelationHistoryRecord> CONSTRAINT_97 = Internal.createUniqueKey(AuditTagRelationHistory.AUDIT_TAG_RELATION_HISTORY, DSL.name("CONSTRAINT_97"), new TableField[] { AuditTagRelationHistory.AUDIT_TAG_RELATION_HISTORY.ID }, true);
    public static final UniqueKey<AuditTagTypeConfigRecord> CONSTRAINT_1 = Internal.createUniqueKey(AuditTagTypeConfig.AUDIT_TAG_TYPE_CONFIG, DSL.name("CONSTRAINT_1"), new TableField[] { AuditTagTypeConfig.AUDIT_TAG_TYPE_CONFIG.ID }, true);
    public static final UniqueKey<AuditUserWhiteDomainRecord> CONSTRAINT_2 = Internal.createUniqueKey(AuditUserWhiteDomain.AUDIT_USER_WHITE_DOMAIN, DSL.name("CONSTRAINT_2"), new TableField[] { AuditUserWhiteDomain.AUDIT_USER_WHITE_DOMAIN.ID }, true);
    public static final UniqueKey<AuditorTaskAllocationRecord> CONSTRAINT_9B = Internal.createUniqueKey(AuditorTaskAllocation.AUDITOR_TASK_ALLOCATION, DSL.name("CONSTRAINT_9B"), new TableField[] { AuditorTaskAllocation.AUDITOR_TASK_ALLOCATION.ID }, true);
    public static final UniqueKey<AuditorTaskAllocationHistoryRecord> CONSTRAINT_FD = Internal.createUniqueKey(AuditorTaskAllocationHistory.AUDITOR_TASK_ALLOCATION_HISTORY, DSL.name("CONSTRAINT_FD"), new TableField[] { AuditorTaskAllocationHistory.AUDITOR_TASK_ALLOCATION_HISTORY.ID }, true);
    public static final UniqueKey<CampaignUserUrlRecord> CONSTRAINT_1A = Internal.createUniqueKey(CampaignUserUrl.CAMPAIGN_USER_URL, DSL.name("CONSTRAINT_1A"), new TableField[] { CampaignUserUrl.CAMPAIGN_USER_URL.ID }, true);
    public static final UniqueKey<CrmOrderUrlRecord> CONSTRAINT_9 = Internal.createUniqueKey(CrmOrderUrl.CRM_ORDER_URL, DSL.name("CONSTRAINT_9"), new TableField[] { CrmOrderUrl.CRM_ORDER_URL.ID, CrmOrderUrl.CRM_ORDER_URL.TYPE }, true);
    public static final UniqueKey<DspAdvertiserRecord> CONSTRAINT_26 = Internal.createUniqueKey(DspAdvertiser.DSP_ADVERTISER, DSL.name("CONSTRAINT_26"), new TableField[] { DspAdvertiser.DSP_ADVERTISER.ID }, true);
    public static final UniqueKey<ExceptionLogRecord> CONSTRAINT_10 = Internal.createUniqueKey(ExceptionLog.EXCEPTION_LOG, DSL.name("CONSTRAINT_10"), new TableField[] { ExceptionLog.EXCEPTION_LOG.ID }, true);
    public static final UniqueKey<ExpiredCommentWarnTaskRecord> CONSTRAINT_BE = Internal.createUniqueKey(ExpiredCommentWarnTask.EXPIRED_COMMENT_WARN_TASK, DSL.name("CONSTRAINT_BE"), new TableField[] { ExpiredCommentWarnTask.EXPIRED_COMMENT_WARN_TASK.ID }, true);
    public static final UniqueKey<QualificationRecord> CONSTRAINT_D = Internal.createUniqueKey(Qualification.QUALIFICATION, DSL.name("CONSTRAINT_D"), new TableField[] { Qualification.QUALIFICATION.ID, Qualification.QUALIFICATION.SOURCE }, true);
    public static final UniqueKey<QualificationConfigRecord> CONSTRAINT_C = Internal.createUniqueKey(QualificationConfig.QUALIFICATION_CONFIG, DSL.name("CONSTRAINT_C"), new TableField[] { QualificationConfig.QUALIFICATION_CONFIG.ID }, true);
    public static final UniqueKey<QualificationRelationRecord> CONSTRAINT_E = Internal.createUniqueKey(QualificationRelation.QUALIFICATION_RELATION, DSL.name("CONSTRAINT_E"), new TableField[] { QualificationRelation.QUALIFICATION_RELATION.ID }, true);
    public static final UniqueKey<QualificationRelationRecord> CONSTRAINT_EE = Internal.createUniqueKey(QualificationRelation.QUALIFICATION_RELATION, DSL.name("CONSTRAINT_EE"), new TableField[] { QualificationRelation.QUALIFICATION_RELATION.QUAL_ID, QualificationRelation.QUALIFICATION_RELATION.SOURCE, QualificationRelation.QUALIFICATION_RELATION.TARGET_ID, QualificationRelation.QUALIFICATION_RELATION.TARGET_TYPE }, true);
    public static final UniqueKey<RuleEvaluateDetailRecord> CONSTRAINT_E2 = Internal.createUniqueKey(RuleEvaluateDetail.RULE_EVALUATE_DETAIL, DSL.name("CONSTRAINT_E2"), new TableField[] { RuleEvaluateDetail.RULE_EVALUATE_DETAIL.ID }, true);
    public static final UniqueKey<UcAccountRecord> CONSTRAINT_4 = Internal.createUniqueKey(UcAccount.UC_ACCOUNT, DSL.name("CONSTRAINT_4"), new TableField[] { UcAccount.UC_ACCOUNT.USER_ID }, true);
    public static final UniqueKey<UcRelationRecord> CONSTRAINT_6 = Internal.createUniqueKey(UcRelation.UC_RELATION, DSL.name("CONSTRAINT_6"), new TableField[] { UcRelation.UC_RELATION.ID }, true);
    public static final UniqueKey<UrlSnapshotRecord> CONSTRAINT_F7 = Internal.createUniqueKey(UrlSnapshot.URL_SNAPSHOT, DSL.name("CONSTRAINT_F7"), new TableField[] { UrlSnapshot.URL_SNAPSHOT.ID }, true);
    public static final UniqueKey<WebTaskInstanceRecord> CONSTRAINT_D6 = Internal.createUniqueKey(WebTaskInstance.WEB_TASK_INSTANCE, DSL.name("CONSTRAINT_D6"), new TableField[] { WebTaskInstance.WEB_TASK_INSTANCE.ID }, true);
}
