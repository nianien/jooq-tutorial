/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables.records;


import com.tengzhe.jooq.data.audit_wolong.tables.AuditWhiteWord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditWhiteWordRecord extends UpdatableRecordImpl<AuditWhiteWordRecord> implements Record7<Long, String, Integer, Integer, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>audit_wolong.audit_white_word.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.word</code>.
     */
    public void setWord(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.word</code>.
     */
    public String getWord() {
        return (String) get(1);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.word_type</code>.
     */
    public void setWordType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.word_type</code>.
     */
    public Integer getWordType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.logic_state</code>.
     */
    public void setLogicState(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.logic_state</code>.
     */
    public Integer getLogicState() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>audit_wolong.audit_white_word.risk_tag</code>.
     */
    public void setRiskTag(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_white_word.risk_tag</code>.
     */
    public Long getRiskTag() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Integer, Integer, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.ID;
    }

    @Override
    public Field<String> field2() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.WORD;
    }

    @Override
    public Field<Integer> field3() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.WORD_TYPE;
    }

    @Override
    public Field<Integer> field4() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.LOGIC_STATE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.MODIFY_TIME;
    }

    @Override
    public Field<Long> field7() {
        return AuditWhiteWord.AUDIT_WHITE_WORD.RISK_TAG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getWord();
    }

    @Override
    public Integer component3() {
        return getWordType();
    }

    @Override
    public Integer component4() {
        return getLogicState();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component6() {
        return getModifyTime();
    }

    @Override
    public Long component7() {
        return getRiskTag();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getWord();
    }

    @Override
    public Integer value3() {
        return getWordType();
    }

    @Override
    public Integer value4() {
        return getLogicState();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value6() {
        return getModifyTime();
    }

    @Override
    public Long value7() {
        return getRiskTag();
    }

    @Override
    public AuditWhiteWordRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value2(String value) {
        setWord(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value3(Integer value) {
        setWordType(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value4(Integer value) {
        setLogicState(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value6(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord value7(Long value) {
        setRiskTag(value);
        return this;
    }

    @Override
    public AuditWhiteWordRecord values(Long value1, String value2, Integer value3, Integer value4, LocalDateTime value5, LocalDateTime value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditWhiteWordRecord
     */
    public AuditWhiteWordRecord() {
        super(AuditWhiteWord.AUDIT_WHITE_WORD);
    }

    /**
     * Create a detached, initialised AuditWhiteWordRecord
     */
    public AuditWhiteWordRecord(Long id, String word, Integer wordType, Integer logicState, LocalDateTime createTime, LocalDateTime modifyTime, Long riskTag) {
        super(AuditWhiteWord.AUDIT_WHITE_WORD);

        setId(id);
        setWord(word);
        setWordType(wordType);
        setLogicState(logicState);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        setRiskTag(riskTag);
    }

    /**
     * Create a detached, initialised AuditWhiteWordRecord
     */
    public AuditWhiteWordRecord(com.tengzhe.jooq.data.audit_wolong.tables.pojos.AuditWhiteWord value) {
        super(AuditWhiteWord.AUDIT_WHITE_WORD);

        if (value != null) {
            setId(value.getId());
            setWord(value.getWord());
            setWordType(value.getWordType());
            setLogicState(value.getLogicState());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
            setRiskTag(value.getRiskTag());
        }
    }
}
