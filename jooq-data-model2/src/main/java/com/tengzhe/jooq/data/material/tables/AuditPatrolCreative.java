/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.AuditPatrolCreativeRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditPatrolCreative extends TableImpl<AuditPatrolCreativeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.audit_patrol_creative</code>
     */
    public static final AuditPatrolCreative AUDIT_PATROL_CREATIVE = new AuditPatrolCreative();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditPatrolCreativeRecord> getRecordType() {
        return AuditPatrolCreativeRecord.class;
    }

    /**
     * The column <code>material.audit_patrol_creative.id</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>material.audit_patrol_creative.patrol_type</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Integer> PATROL_TYPE = createField(DSL.name("patrol_type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>material.audit_patrol_creative.creative_id</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Long> CREATIVE_ID = createField(DSL.name("creative_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.audit_patrol_creative.campaign_id</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Long> CAMPAIGN_ID = createField(DSL.name("campaign_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.audit_patrol_creative.user_id</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.audit_patrol_creative.target_url</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> TARGET_URL = createField(DSL.name("target_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.effect_url</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> EFFECT_URL = createField(DSL.name("effect_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.hit_words</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> HIT_WORDS = createField(DSL.name("hit_words"), SQLDataType.VARCHAR(2048).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.risk_type</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> RISK_TYPE = createField(DSL.name("risk_type"), SQLDataType.VARCHAR(2048).nullable(false), this, "");

    /**
     * The column <code>material.audit_patrol_creative.risk_rate</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> RISK_RATE = createField(DSL.name("risk_rate"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.url_snapshot</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> URL_SNAPSHOT = createField(DSL.name("url_snapshot"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.operate</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Integer> OPERATE = createField(DSL.name("operate"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.audit_tag</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, String> AUDIT_TAG = createField(DSL.name("audit_tag"), SQLDataType.VARCHAR(2048).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.auditor_id</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Long> AUDITOR_ID = createField(DSL.name("auditor_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.audit_time</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, LocalDateTime> AUDIT_TIME = createField(DSL.name("audit_time"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>material.audit_patrol_creative.patrol_date</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, Integer> PATROL_DATE = createField(DSL.name("patrol_date"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>material.audit_patrol_creative.create_time</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.audit_patrol_creative.modify_time</code>.
     */
    public final TableField<AuditPatrolCreativeRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AuditPatrolCreative(Name alias, Table<AuditPatrolCreativeRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditPatrolCreative(Name alias, Table<AuditPatrolCreativeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.audit_patrol_creative</code> table
     * reference
     */
    public AuditPatrolCreative(String alias) {
        this(DSL.name(alias), AUDIT_PATROL_CREATIVE);
    }

    /**
     * Create an aliased <code>material.audit_patrol_creative</code> table
     * reference
     */
    public AuditPatrolCreative(Name alias) {
        this(alias, AUDIT_PATROL_CREATIVE);
    }

    /**
     * Create a <code>material.audit_patrol_creative</code> table reference
     */
    public AuditPatrolCreative() {
        this(DSL.name("audit_patrol_creative"), null);
    }

    public <O extends Record> AuditPatrolCreative(Table<O> child, ForeignKey<O, AuditPatrolCreativeRecord> key) {
        super(child, key, AUDIT_PATROL_CREATIVE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public Identity<AuditPatrolCreativeRecord, Long> getIdentity() {
        return (Identity<AuditPatrolCreativeRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditPatrolCreativeRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_50;
    }

    @Override
    public AuditPatrolCreative as(String alias) {
        return new AuditPatrolCreative(DSL.name(alias), this);
    }

    @Override
    public AuditPatrolCreative as(Name alias) {
        return new AuditPatrolCreative(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditPatrolCreative rename(String name) {
        return new AuditPatrolCreative(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditPatrolCreative rename(Name name) {
        return new AuditPatrolCreative(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, Integer, Long, Long, Long, String, String, String, String, String, String, Integer, String, Long, LocalDateTime, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
