/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables.records;


import com.tengzhe.jooq.data.material.tables.AuditRuleSet;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditRuleSetRecord extends UpdatableRecordImpl<AuditRuleSetRecord> implements Record13<Long, Integer, Integer, Long, Integer, String, Integer, String, Long, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>material.audit_rule_set.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>material.audit_rule_set.entity_type</code>.
     */
    public void setEntityType(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.entity_type</code>.
     */
    public Integer getEntityType() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>material.audit_rule_set.audit_type</code>.
     */
    public void setAuditType(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.audit_type</code>.
     */
    public Integer getAuditType() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>material.audit_rule_set.version</code>.
     */
    public void setVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.version</code>.
     */
    public Long getVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>material.audit_rule_set.state</code>.
     */
    public void setState(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.state</code>.
     */
    public Integer getState() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>material.audit_rule_set.rule</code>.
     */
    public void setRule(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.rule</code>.
     */
    public String getRule() {
        return (String) get(5);
    }

    /**
     * Setter for <code>material.audit_rule_set.default_audit_state</code>.
     */
    public void setDefaultAuditState(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.default_audit_state</code>.
     */
    public Integer getDefaultAuditState() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>material.audit_rule_set.description</code>.
     */
    public void setDescription(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>material.audit_rule_set.auditor_id</code>.
     */
    public void setAuditorId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.auditor_id</code>.
     */
    public Long getAuditorId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>material.audit_rule_set.start_time</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.start_time</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>material.audit_rule_set.end_time</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.end_time</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>material.audit_rule_set.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>material.audit_rule_set.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>material.audit_rule_set.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Integer, Integer, Long, Integer, String, Integer, String, Long, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Integer, Integer, Long, Integer, String, Integer, String, Long, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditRuleSet.AUDIT_RULE_SET.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AuditRuleSet.AUDIT_RULE_SET.ENTITY_TYPE;
    }

    @Override
    public Field<Integer> field3() {
        return AuditRuleSet.AUDIT_RULE_SET.AUDIT_TYPE;
    }

    @Override
    public Field<Long> field4() {
        return AuditRuleSet.AUDIT_RULE_SET.VERSION;
    }

    @Override
    public Field<Integer> field5() {
        return AuditRuleSet.AUDIT_RULE_SET.STATE;
    }

    @Override
    public Field<String> field6() {
        return AuditRuleSet.AUDIT_RULE_SET.RULE;
    }

    @Override
    public Field<Integer> field7() {
        return AuditRuleSet.AUDIT_RULE_SET.DEFAULT_AUDIT_STATE;
    }

    @Override
    public Field<String> field8() {
        return AuditRuleSet.AUDIT_RULE_SET.DESCRIPTION;
    }

    @Override
    public Field<Long> field9() {
        return AuditRuleSet.AUDIT_RULE_SET.AUDITOR_ID;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return AuditRuleSet.AUDIT_RULE_SET.START_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return AuditRuleSet.AUDIT_RULE_SET.END_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return AuditRuleSet.AUDIT_RULE_SET.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return AuditRuleSet.AUDIT_RULE_SET.MODIFY_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getEntityType();
    }

    @Override
    public Integer component3() {
        return getAuditType();
    }

    @Override
    public Long component4() {
        return getVersion();
    }

    @Override
    public Integer component5() {
        return getState();
    }

    @Override
    public String component6() {
        return getRule();
    }

    @Override
    public Integer component7() {
        return getDefaultAuditState();
    }

    @Override
    public String component8() {
        return getDescription();
    }

    @Override
    public Long component9() {
        return getAuditorId();
    }

    @Override
    public LocalDateTime component10() {
        return getStartTime();
    }

    @Override
    public LocalDateTime component11() {
        return getEndTime();
    }

    @Override
    public LocalDateTime component12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component13() {
        return getModifyTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getEntityType();
    }

    @Override
    public Integer value3() {
        return getAuditType();
    }

    @Override
    public Long value4() {
        return getVersion();
    }

    @Override
    public Integer value5() {
        return getState();
    }

    @Override
    public String value6() {
        return getRule();
    }

    @Override
    public Integer value7() {
        return getDefaultAuditState();
    }

    @Override
    public String value8() {
        return getDescription();
    }

    @Override
    public Long value9() {
        return getAuditorId();
    }

    @Override
    public LocalDateTime value10() {
        return getStartTime();
    }

    @Override
    public LocalDateTime value11() {
        return getEndTime();
    }

    @Override
    public LocalDateTime value12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value13() {
        return getModifyTime();
    }

    @Override
    public AuditRuleSetRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value2(Integer value) {
        setEntityType(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value3(Integer value) {
        setAuditType(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value4(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value5(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value6(String value) {
        setRule(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value7(Integer value) {
        setDefaultAuditState(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value8(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value9(Long value) {
        setAuditorId(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value10(LocalDateTime value) {
        setStartTime(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value11(LocalDateTime value) {
        setEndTime(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value12(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord value13(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AuditRuleSetRecord values(Long value1, Integer value2, Integer value3, Long value4, Integer value5, String value6, Integer value7, String value8, Long value9, LocalDateTime value10, LocalDateTime value11, LocalDateTime value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditRuleSetRecord
     */
    public AuditRuleSetRecord() {
        super(AuditRuleSet.AUDIT_RULE_SET);
    }

    /**
     * Create a detached, initialised AuditRuleSetRecord
     */
    public AuditRuleSetRecord(Long id, Integer entityType, Integer auditType, Long version, Integer state, String rule, Integer defaultAuditState, String description, Long auditorId, LocalDateTime startTime, LocalDateTime endTime, LocalDateTime createTime, LocalDateTime modifyTime) {
        super(AuditRuleSet.AUDIT_RULE_SET);

        setId(id);
        setEntityType(entityType);
        setAuditType(auditType);
        setVersion(version);
        setState(state);
        setRule(rule);
        setDefaultAuditState(defaultAuditState);
        setDescription(description);
        setAuditorId(auditorId);
        setStartTime(startTime);
        setEndTime(endTime);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
    }

    /**
     * Create a detached, initialised AuditRuleSetRecord
     */
    public AuditRuleSetRecord(com.tengzhe.jooq.data.material.tables.pojos.AuditRuleSet value) {
        super(AuditRuleSet.AUDIT_RULE_SET);

        if (value != null) {
            setId(value.getId());
            setEntityType(value.getEntityType());
            setAuditType(value.getAuditType());
            setVersion(value.getVersion());
            setState(value.getState());
            setRule(value.getRule());
            setDefaultAuditState(value.getDefaultAuditState());
            setDescription(value.getDescription());
            setAuditorId(value.getAuditorId());
            setStartTime(value.getStartTime());
            setEndTime(value.getEndTime());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
        }
    }
}
