/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.AraIllegalClueRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AraIllegalClue extends TableImpl<AraIllegalClueRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.ara_illegal_clue</code>
     */
    public static final AraIllegalClue ARA_ILLEGAL_CLUE = new AraIllegalClue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AraIllegalClueRecord> getRecordType() {
        return AraIllegalClueRecord.class;
    }

    /**
     * The column <code>naudit.ara_illegal_clue.id</code>.
     */
    public final TableField<AraIllegalClueRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.clue_no</code>.
     */
    public final TableField<AraIllegalClueRecord, String> CLUE_NO = createField(DSL.name("clue_no"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.clue_url</code>.
     */
    public final TableField<AraIllegalClueRecord, String> CLUE_URL = createField(DSL.name("clue_url"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.clue_time</code>.
     */
    public final TableField<AraIllegalClueRecord, LocalDateTime> CLUE_TIME = createField(DSL.name("clue_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.ad_url</code>.
     */
    public final TableField<AraIllegalClueRecord, String> AD_URL = createField(DSL.name("ad_url"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.user_id</code>.
     */
    public final TableField<AraIllegalClueRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.state</code>.
     */
    public final TableField<AraIllegalClueRecord, Long> STATE = createField(DSL.name("state"), SQLDataType.BIGINT.defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.biz_type</code>.
     */
    public final TableField<AraIllegalClueRecord, Integer> BIZ_TYPE = createField(DSL.name("biz_type"), SQLDataType.INTEGER.defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.create_time</code>.
     */
    public final TableField<AraIllegalClueRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.ara_illegal_clue.modify_time</code>.
     */
    public final TableField<AraIllegalClueRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AraIllegalClue(Name alias, Table<AraIllegalClueRecord> aliased) {
        this(alias, aliased, null);
    }

    private AraIllegalClue(Name alias, Table<AraIllegalClueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.ara_illegal_clue</code> table reference
     */
    public AraIllegalClue(String alias) {
        this(DSL.name(alias), ARA_ILLEGAL_CLUE);
    }

    /**
     * Create an aliased <code>naudit.ara_illegal_clue</code> table reference
     */
    public AraIllegalClue(Name alias) {
        this(alias, ARA_ILLEGAL_CLUE);
    }

    /**
     * Create a <code>naudit.ara_illegal_clue</code> table reference
     */
    public AraIllegalClue() {
        this(DSL.name("ara_illegal_clue"), null);
    }

    public <O extends Record> AraIllegalClue(Table<O> child, ForeignKey<O, AraIllegalClueRecord> key) {
        super(child, key, ARA_ILLEGAL_CLUE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<AraIllegalClueRecord, Long> getIdentity() {
        return (Identity<AraIllegalClueRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AraIllegalClueRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    @Override
    public AraIllegalClue as(String alias) {
        return new AraIllegalClue(DSL.name(alias), this);
    }

    @Override
    public AraIllegalClue as(Name alias) {
        return new AraIllegalClue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AraIllegalClue rename(String name) {
        return new AraIllegalClue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AraIllegalClue rename(Name name) {
        return new AraIllegalClue(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, String, LocalDateTime, String, Long, Long, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
