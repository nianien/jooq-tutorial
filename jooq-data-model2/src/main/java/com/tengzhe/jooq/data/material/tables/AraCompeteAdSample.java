/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.AraCompeteAdSampleRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AraCompeteAdSample extends TableImpl<AraCompeteAdSampleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.ara_compete_ad_sample</code>
     */
    public static final AraCompeteAdSample ARA_COMPETE_AD_SAMPLE = new AraCompeteAdSample();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AraCompeteAdSampleRecord> getRecordType() {
        return AraCompeteAdSampleRecord.class;
    }

    /**
     * The column <code>material.ara_compete_ad_sample.id</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.type</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, Integer> TYPE = createField(DSL.name("type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.word</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> WORD = createField(DSL.name("word"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.query_url</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> QUERY_URL = createField(DSL.name("query_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.query_snapshot</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> QUERY_SNAPSHOT = createField(DSL.name("query_snapshot"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.ad_url</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> AD_URL = createField(DSL.name("ad_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.ad_html_url</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> AD_HTML_URL = createField(DSL.name("ad_html_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.ad_snapshot</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> AD_SNAPSHOT = createField(DSL.name("ad_snapshot"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.risk_type</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> RISK_TYPE = createField(DSL.name("risk_type"), SQLDataType.VARCHAR(2048).nullable(false), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.hit_words</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> HIT_WORDS = createField(DSL.name("hit_words"), SQLDataType.VARCHAR(2048).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.audit_tag</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, String> AUDIT_TAG = createField(DSL.name("audit_tag"), SQLDataType.VARCHAR(2048).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.auditor_id</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, Long> AUDITOR_ID = createField(DSL.name("auditor_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.audit_time</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, LocalDateTime> AUDIT_TIME = createField(DSL.name("audit_time"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>material.ara_compete_ad_sample.dt</code>.
     */
    public final TableField<AraCompeteAdSampleRecord, Integer> DT = createField(DSL.name("dt"), SQLDataType.INTEGER, this, "");

    private AraCompeteAdSample(Name alias, Table<AraCompeteAdSampleRecord> aliased) {
        this(alias, aliased, null);
    }

    private AraCompeteAdSample(Name alias, Table<AraCompeteAdSampleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.ara_compete_ad_sample</code> table
     * reference
     */
    public AraCompeteAdSample(String alias) {
        this(DSL.name(alias), ARA_COMPETE_AD_SAMPLE);
    }

    /**
     * Create an aliased <code>material.ara_compete_ad_sample</code> table
     * reference
     */
    public AraCompeteAdSample(Name alias) {
        this(alias, ARA_COMPETE_AD_SAMPLE);
    }

    /**
     * Create a <code>material.ara_compete_ad_sample</code> table reference
     */
    public AraCompeteAdSample() {
        this(DSL.name("ara_compete_ad_sample"), null);
    }

    public <O extends Record> AraCompeteAdSample(Table<O> child, ForeignKey<O, AraCompeteAdSampleRecord> key) {
        super(child, key, ARA_COMPETE_AD_SAMPLE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public Identity<AraCompeteAdSampleRecord, Long> getIdentity() {
        return (Identity<AraCompeteAdSampleRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AraCompeteAdSampleRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7E;
    }

    @Override
    public AraCompeteAdSample as(String alias) {
        return new AraCompeteAdSample(DSL.name(alias), this);
    }

    @Override
    public AraCompeteAdSample as(Name alias) {
        return new AraCompeteAdSample(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AraCompeteAdSample rename(String name) {
        return new AraCompeteAdSample(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AraCompeteAdSample rename(Name name) {
        return new AraCompeteAdSample(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, Integer, String, String, String, String, String, String, String, String, String, Long, LocalDateTime, Integer> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
