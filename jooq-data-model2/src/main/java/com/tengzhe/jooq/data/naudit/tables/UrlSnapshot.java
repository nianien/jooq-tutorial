/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.UrlSnapshotRecord;

import java.util.Date;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UrlSnapshot extends TableImpl<UrlSnapshotRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.url_snapshot</code>
     */
    public static final UrlSnapshot URL_SNAPSHOT = new UrlSnapshot();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UrlSnapshotRecord> getRecordType() {
        return UrlSnapshotRecord.class;
    }

    /**
     * The column <code>naudit.url_snapshot.id</code>.
     */
    public final TableField<UrlSnapshotRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.url_snapshot.url</code>.
     */
    public final TableField<UrlSnapshotRecord, String> URL = createField(DSL.name("url"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>naudit.url_snapshot.screen_shot_url</code>.
     */
    public final TableField<UrlSnapshotRecord, String> SCREEN_SHOT_URL = createField(DSL.name("screen_shot_url"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>naudit.url_snapshot.crawl_time</code>.
     */
    public final TableField<UrlSnapshotRecord, Date> CRAWL_TIME = createField(DSL.name("crawl_time"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "", org.jooq.Converter.ofNullable(
                            Long.class, Date.class,
                            Date::new, Date::getTime));

    private UrlSnapshot(Name alias, Table<UrlSnapshotRecord> aliased) {
        this(alias, aliased, null);
    }

    private UrlSnapshot(Name alias, Table<UrlSnapshotRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.url_snapshot</code> table reference
     */
    public UrlSnapshot(String alias) {
        this(DSL.name(alias), URL_SNAPSHOT);
    }

    /**
     * Create an aliased <code>naudit.url_snapshot</code> table reference
     */
    public UrlSnapshot(Name alias) {
        this(alias, URL_SNAPSHOT);
    }

    /**
     * Create a <code>naudit.url_snapshot</code> table reference
     */
    public UrlSnapshot() {
        this(DSL.name("url_snapshot"), null);
    }

    public <O extends Record> UrlSnapshot(Table<O> child, ForeignKey<O, UrlSnapshotRecord> key) {
        super(child, key, URL_SNAPSHOT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<UrlSnapshotRecord, Long> getIdentity() {
        return (Identity<UrlSnapshotRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<UrlSnapshotRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F7;
    }

    @Override
    public UrlSnapshot as(String alias) {
        return new UrlSnapshot(DSL.name(alias), this);
    }

    @Override
    public UrlSnapshot as(Name alias) {
        return new UrlSnapshot(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UrlSnapshot rename(String name) {
        return new UrlSnapshot(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UrlSnapshot rename(Name name) {
        return new UrlSnapshot(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, Date> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
