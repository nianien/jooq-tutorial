/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.AuditCrmOrderUrlRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditCrmOrderUrl extends TableImpl<AuditCrmOrderUrlRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.audit_crm_order_url</code>
     */
    public static final AuditCrmOrderUrl AUDIT_CRM_ORDER_URL = new AuditCrmOrderUrl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditCrmOrderUrlRecord> getRecordType() {
        return AuditCrmOrderUrlRecord.class;
    }

    /**
     * The column <code>naudit.audit_crm_order_url.id</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.type</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, Integer> TYPE = createField(DSL.name("type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("-1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.audit_type</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, Integer> AUDIT_TYPE = createField(DSL.name("audit_type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.auditor_id</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, Long> AUDITOR_ID = createField(DSL.name("auditor_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.audit_state</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, Integer> AUDIT_STATE = createField(DSL.name("audit_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.audit_result</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, String> AUDIT_RESULT = createField(DSL.name("audit_result"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.audit_time</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, LocalDateTime> AUDIT_TIME = createField(DSL.name("audit_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("'9999-12-31 23:59:59'", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.create_time</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.audit_crm_order_url.modify_time</code>.
     */
    public final TableField<AuditCrmOrderUrlRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AuditCrmOrderUrl(Name alias, Table<AuditCrmOrderUrlRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditCrmOrderUrl(Name alias, Table<AuditCrmOrderUrlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.audit_crm_order_url</code> table reference
     */
    public AuditCrmOrderUrl(String alias) {
        this(DSL.name(alias), AUDIT_CRM_ORDER_URL);
    }

    /**
     * Create an aliased <code>naudit.audit_crm_order_url</code> table reference
     */
    public AuditCrmOrderUrl(Name alias) {
        this(alias, AUDIT_CRM_ORDER_URL);
    }

    /**
     * Create a <code>naudit.audit_crm_order_url</code> table reference
     */
    public AuditCrmOrderUrl() {
        this(DSL.name("audit_crm_order_url"), null);
    }

    public <O extends Record> AuditCrmOrderUrl(Table<O> child, ForeignKey<O, AuditCrmOrderUrlRecord> key) {
        super(child, key, AUDIT_CRM_ORDER_URL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public UniqueKey<AuditCrmOrderUrlRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_F;
    }

    @Override
    public AuditCrmOrderUrl as(String alias) {
        return new AuditCrmOrderUrl(DSL.name(alias), this);
    }

    @Override
    public AuditCrmOrderUrl as(Name alias) {
        return new AuditCrmOrderUrl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditCrmOrderUrl rename(String name) {
        return new AuditCrmOrderUrl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditCrmOrderUrl rename(Name name) {
        return new AuditCrmOrderUrl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Integer, Integer, Long, Integer, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
