/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables;


import com.tengzhe.jooq.data.audit_wolong.AuditWolong;
import com.tengzhe.jooq.data.audit_wolong.Keys;
import com.tengzhe.jooq.data.audit_wolong.tables.records.TbAuditHistoryRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbAuditHistory extends TableImpl<TbAuditHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>audit_wolong.tb_audit_history</code>
     */
    public static final TbAuditHistory TB_AUDIT_HISTORY = new TbAuditHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbAuditHistoryRecord> getRecordType() {
        return TbAuditHistoryRecord.class;
    }

    /**
     * The column <code>audit_wolong.tb_audit_history.id</code>.
     */
    public final TableField<TbAuditHistoryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.auditid</code>.
     */
    public final TableField<TbAuditHistoryRecord, Long> AUDITID = createField(DSL.name("auditid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.time</code>.
     */
    public final TableField<TbAuditHistoryRecord, LocalDateTime> TIME = createField(DSL.name("time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.detail</code>.
     */
    public final TableField<TbAuditHistoryRecord, String> DETAIL = createField(DSL.name("detail"), SQLDataType.VARCHAR(4096).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.event_type</code>.
     */
    public final TableField<TbAuditHistoryRecord, Integer> EVENT_TYPE = createField(DSL.name("event_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.level</code>.
     */
    public final TableField<TbAuditHistoryRecord, Integer> LEVEL = createField(DSL.name("level"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.state</code>.
     */
    public final TableField<TbAuditHistoryRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.targetid</code>.
     */
    public final TableField<TbAuditHistoryRecord, Long> TARGETID = createField(DSL.name("targetid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.reason_code</code>.
     */
    public final TableField<TbAuditHistoryRecord, String> REASON_CODE = createField(DSL.name("reason_code"), SQLDataType.VARCHAR(128).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_wolong.tb_audit_history.userid</code>.
     */
    public final TableField<TbAuditHistoryRecord, Long> USERID = createField(DSL.name("userid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    private TbAuditHistory(Name alias, Table<TbAuditHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbAuditHistory(Name alias, Table<TbAuditHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_wolong.tb_audit_history</code> table
     * reference
     */
    public TbAuditHistory(String alias) {
        this(DSL.name(alias), TB_AUDIT_HISTORY);
    }

    /**
     * Create an aliased <code>audit_wolong.tb_audit_history</code> table
     * reference
     */
    public TbAuditHistory(Name alias) {
        this(alias, TB_AUDIT_HISTORY);
    }

    /**
     * Create a <code>audit_wolong.tb_audit_history</code> table reference
     */
    public TbAuditHistory() {
        this(DSL.name("tb_audit_history"), null);
    }

    public <O extends Record> TbAuditHistory(Table<O> child, ForeignKey<O, TbAuditHistoryRecord> key) {
        super(child, key, TB_AUDIT_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : AuditWolong.AUDIT_WOLONG;
    }

    @Override
    public Identity<TbAuditHistoryRecord, Long> getIdentity() {
        return (Identity<TbAuditHistoryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<TbAuditHistoryRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_9F;
    }

    @Override
    public TbAuditHistory as(String alias) {
        return new TbAuditHistory(DSL.name(alias), this);
    }

    @Override
    public TbAuditHistory as(Name alias) {
        return new TbAuditHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbAuditHistory rename(String name) {
        return new TbAuditHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbAuditHistory rename(Name name) {
        return new TbAuditHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, LocalDateTime, String, Integer, Integer, Integer, Long, String, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
