/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables.records;


import com.tengzhe.jooq.data.naudit.tables.AuditSpecialAgent;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditSpecialAgentRecord extends UpdatableRecordImpl<AuditSpecialAgentRecord> implements Record7<Long, Long, String, Integer, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>naudit.audit_special_agent.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.agent_cs_name</code>.
     */
    public void setAgentCsName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.agent_cs_name</code>.
     */
    public String getAgentCsName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.state</code>.
     */
    public void setState(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.state</code>.
     */
    public Integer getState() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.operator_id</code>.
     */
    public void setOperatorId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.operator_id</code>.
     */
    public Long getOperatorId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>naudit.audit_special_agent.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>naudit.audit_special_agent.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, Integer, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, String, Integer, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.AGENT_CS_NAME;
    }

    @Override
    public Field<Integer> field4() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.STATE;
    }

    @Override
    public Field<Long> field5() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.OPERATOR_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return AuditSpecialAgent.AUDIT_SPECIAL_AGENT.MODIFY_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getAgentCsName();
    }

    @Override
    public Integer component4() {
        return getState();
    }

    @Override
    public Long component5() {
        return getOperatorId();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getModifyTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getAgentCsName();
    }

    @Override
    public Integer value4() {
        return getState();
    }

    @Override
    public Long value5() {
        return getOperatorId();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getModifyTime();
    }

    @Override
    public AuditSpecialAgentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value3(String value) {
        setAgentCsName(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value4(Integer value) {
        setState(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value5(Long value) {
        setOperatorId(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord value7(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AuditSpecialAgentRecord values(Long value1, Long value2, String value3, Integer value4, Long value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditSpecialAgentRecord
     */
    public AuditSpecialAgentRecord() {
        super(AuditSpecialAgent.AUDIT_SPECIAL_AGENT);
    }

    /**
     * Create a detached, initialised AuditSpecialAgentRecord
     */
    public AuditSpecialAgentRecord(Long id, Long userId, String agentCsName, Integer state, Long operatorId, LocalDateTime createTime, LocalDateTime modifyTime) {
        super(AuditSpecialAgent.AUDIT_SPECIAL_AGENT);

        setId(id);
        setUserId(userId);
        setAgentCsName(agentCsName);
        setState(state);
        setOperatorId(operatorId);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
    }

    /**
     * Create a detached, initialised AuditSpecialAgentRecord
     */
    public AuditSpecialAgentRecord(com.tengzhe.jooq.data.naudit.tables.pojos.AuditSpecialAgent value) {
        super(AuditSpecialAgent.AUDIT_SPECIAL_AGENT);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setAgentCsName(value.getAgentCsName());
            setState(value.getState());
            setOperatorId(value.getOperatorId());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
        }
    }
}
