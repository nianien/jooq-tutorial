/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables;


import com.tengzhe.jooq.data.audit_wolong.AuditWolong;
import com.tengzhe.jooq.data.audit_wolong.Keys;
import com.tengzhe.jooq.data.audit_wolong.tables.records.CpcFlowMarketWordRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CpcFlowMarketWord extends TableImpl<CpcFlowMarketWordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>audit_wolong.cpc_flow_market_word</code>
     */
    public static final CpcFlowMarketWord CPC_FLOW_MARKET_WORD = new CpcFlowMarketWord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CpcFlowMarketWordRecord> getRecordType() {
        return CpcFlowMarketWordRecord.class;
    }

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.id</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.word</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, String> WORD = createField(DSL.name("word"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.word_md5</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Long> WORD_MD5 = createField(DSL.name("word_md5"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.category</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Integer> CATEGORY = createField(DSL.name("category"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.category_name</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, String> CATEGORY_NAME = createField(DSL.name("category_name"), SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.logic_state</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Integer> LOGIC_STATE = createField(DSL.name("logic_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.version</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.state_detail</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Integer> STATE_DETAIL = createField(DSL.name("state_detail"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.state</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.reject_reason</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, String> REJECT_REASON = createField(DSL.name("reject_reason"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.auditor_id</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, Long> AUDITOR_ID = createField(DSL.name("auditor_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.delete_time</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, LocalDateTime> DELETE_TIME = createField(DSL.name("delete_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("'9999-00-00 00:00:00'", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.create_time</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>audit_wolong.cpc_flow_market_word.modify_time</code>.
     */
    public final TableField<CpcFlowMarketWordRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private CpcFlowMarketWord(Name alias, Table<CpcFlowMarketWordRecord> aliased) {
        this(alias, aliased, null);
    }

    private CpcFlowMarketWord(Name alias, Table<CpcFlowMarketWordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_wolong.cpc_flow_market_word</code> table
     * reference
     */
    public CpcFlowMarketWord(String alias) {
        this(DSL.name(alias), CPC_FLOW_MARKET_WORD);
    }

    /**
     * Create an aliased <code>audit_wolong.cpc_flow_market_word</code> table
     * reference
     */
    public CpcFlowMarketWord(Name alias) {
        this(alias, CPC_FLOW_MARKET_WORD);
    }

    /**
     * Create a <code>audit_wolong.cpc_flow_market_word</code> table reference
     */
    public CpcFlowMarketWord() {
        this(DSL.name("cpc_flow_market_word"), null);
    }

    public <O extends Record> CpcFlowMarketWord(Table<O> child, ForeignKey<O, CpcFlowMarketWordRecord> key) {
        super(child, key, CPC_FLOW_MARKET_WORD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : AuditWolong.AUDIT_WOLONG;
    }

    @Override
    public UniqueKey<CpcFlowMarketWordRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_44;
    }

    @Override
    public CpcFlowMarketWord as(String alias) {
        return new CpcFlowMarketWord(DSL.name(alias), this);
    }

    @Override
    public CpcFlowMarketWord as(Name alias) {
        return new CpcFlowMarketWord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CpcFlowMarketWord rename(String name) {
        return new CpcFlowMarketWord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CpcFlowMarketWord rename(Name name) {
        return new CpcFlowMarketWord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, Long, Integer, String, Integer, Long, Integer, Integer, String, Long, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
