/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.CptQmxingIdeaRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CptQmxingIdea extends TableImpl<CptQmxingIdeaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.cpt_qmxing_idea</code>
     */
    public static final CptQmxingIdea CPT_QMXING_IDEA = new CptQmxingIdea();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CptQmxingIdeaRecord> getRecordType() {
        return CptQmxingIdeaRecord.class;
    }

    /**
     * The column <code>material.cpt_qmxing_idea.id</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.uc_id</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> UC_ID = createField(DSL.name("uc_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.user_id</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.contract_id</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> CONTRACT_ID = createField(DSL.name("contract_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.plan_id</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> PLAN_ID = createField(DSL.name("plan_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.style_type</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Integer> STYLE_TYPE = createField(DSL.name("style_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.brand_name</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> BRAND_NAME = createField(DSL.name("brand_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.corp_name</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> CORP_NAME = createField(DSL.name("corp_name"), SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.keywords</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> KEYWORDS = createField(DSL.name("keywords"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.regions</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> REGIONS = createField(DSL.name("regions"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.expect_deploy_time</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> EXPECT_DEPLOY_TIME = createField(DSL.name("expect_deploy_time"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.real_deploy_time</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> REAL_DEPLOY_TIME = createField(DSL.name("real_deploy_time"), SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.content</code>.
     */
    public final TableField<CptQmxingIdeaRecord, String> CONTENT = createField(DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.logic_state</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Integer> LOGIC_STATE = createField(DSL.name("logic_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.version</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.state</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.state_detail</code>.
     */
    public final TableField<CptQmxingIdeaRecord, Integer> STATE_DETAIL = createField(DSL.name("state_detail"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.create_time</code>.
     */
    public final TableField<CptQmxingIdeaRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.cpt_qmxing_idea.modify_time</code>.
     */
    public final TableField<CptQmxingIdeaRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private CptQmxingIdea(Name alias, Table<CptQmxingIdeaRecord> aliased) {
        this(alias, aliased, null);
    }

    private CptQmxingIdea(Name alias, Table<CptQmxingIdeaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.cpt_qmxing_idea</code> table reference
     */
    public CptQmxingIdea(String alias) {
        this(DSL.name(alias), CPT_QMXING_IDEA);
    }

    /**
     * Create an aliased <code>material.cpt_qmxing_idea</code> table reference
     */
    public CptQmxingIdea(Name alias) {
        this(alias, CPT_QMXING_IDEA);
    }

    /**
     * Create a <code>material.cpt_qmxing_idea</code> table reference
     */
    public CptQmxingIdea() {
        this(DSL.name("cpt_qmxing_idea"), null);
    }

    public <O extends Record> CptQmxingIdea(Table<O> child, ForeignKey<O, CptQmxingIdeaRecord> key) {
        super(child, key, CPT_QMXING_IDEA);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public UniqueKey<CptQmxingIdeaRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_C6;
    }

    @Override
    public CptQmxingIdea as(String alias) {
        return new CptQmxingIdea(DSL.name(alias), this);
    }

    @Override
    public CptQmxingIdea as(Name alias) {
        return new CptQmxingIdea(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CptQmxingIdea rename(String name) {
        return new CptQmxingIdea(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CptQmxingIdea rename(Name name) {
        return new CptQmxingIdea(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<Long, Long, Long, Long, Long, Integer, String, String, String, String, String, String, String, Integer, Long, Integer, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
