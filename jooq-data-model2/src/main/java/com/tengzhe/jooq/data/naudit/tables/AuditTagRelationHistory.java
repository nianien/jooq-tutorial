/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.AuditTagRelationHistoryRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditTagRelationHistory extends TableImpl<AuditTagRelationHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.audit_tag_relation_history</code>
     */
    public static final AuditTagRelationHistory AUDIT_TAG_RELATION_HISTORY = new AuditTagRelationHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditTagRelationHistoryRecord> getRecordType() {
        return AuditTagRelationHistoryRecord.class;
    }

    /**
     * The column <code>naudit.audit_tag_relation_history.id</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.tag_type</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, Integer> TAG_TYPE = createField(DSL.name("tag_type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.target_id</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, Long> TARGET_ID = createField(DSL.name("target_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.target_type</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, Integer> TARGET_TYPE = createField(DSL.name("target_type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.biz_type</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, String> BIZ_TYPE = createField(DSL.name("biz_type"), SQLDataType.VARCHAR(256).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.code</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, String> CODE = createField(DSL.name("code"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.score</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, String> SCORE = createField(DSL.name("score"), SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.tag</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, String> TAG = createField(DSL.name("tag"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.creator</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, Long> CREATOR = createField(DSL.name("creator"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.create_time</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.audit_tag_relation_history.add_time</code>.
     */
    public final TableField<AuditTagRelationHistoryRecord, LocalDateTime> ADD_TIME = createField(DSL.name("add_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AuditTagRelationHistory(Name alias, Table<AuditTagRelationHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditTagRelationHistory(Name alias, Table<AuditTagRelationHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.audit_tag_relation_history</code> table
     * reference
     */
    public AuditTagRelationHistory(String alias) {
        this(DSL.name(alias), AUDIT_TAG_RELATION_HISTORY);
    }

    /**
     * Create an aliased <code>naudit.audit_tag_relation_history</code> table
     * reference
     */
    public AuditTagRelationHistory(Name alias) {
        this(alias, AUDIT_TAG_RELATION_HISTORY);
    }

    /**
     * Create a <code>naudit.audit_tag_relation_history</code> table reference
     */
    public AuditTagRelationHistory() {
        this(DSL.name("audit_tag_relation_history"), null);
    }

    public <O extends Record> AuditTagRelationHistory(Table<O> child, ForeignKey<O, AuditTagRelationHistoryRecord> key) {
        super(child, key, AUDIT_TAG_RELATION_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<AuditTagRelationHistoryRecord, Long> getIdentity() {
        return (Identity<AuditTagRelationHistoryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditTagRelationHistoryRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_97;
    }

    @Override
    public AuditTagRelationHistory as(String alias) {
        return new AuditTagRelationHistory(DSL.name(alias), this);
    }

    @Override
    public AuditTagRelationHistory as(Name alias) {
        return new AuditTagRelationHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditTagRelationHistory rename(String name) {
        return new AuditTagRelationHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditTagRelationHistory rename(Name name) {
        return new AuditTagRelationHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Integer, Long, Integer, String, String, String, String, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
