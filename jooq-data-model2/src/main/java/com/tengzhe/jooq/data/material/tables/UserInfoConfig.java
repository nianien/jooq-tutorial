/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.UserInfoConfigRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoConfig extends TableImpl<UserInfoConfigRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.user_info_config</code>
     */
    public static final UserInfoConfig USER_INFO_CONFIG = new UserInfoConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserInfoConfigRecord> getRecordType() {
        return UserInfoConfigRecord.class;
    }

    /**
     * The column <code>material.user_info_config.user_id</code>.
     */
    public final TableField<UserInfoConfigRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.user_info_config.priority</code>.
     */
    public final TableField<UserInfoConfigRecord, Long> PRIORITY = createField(DSL.name("priority"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>material.user_info_config.create_time</code>.
     */
    public final TableField<UserInfoConfigRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("'2010-01-01 00:00:00'", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.user_info_config.modify_time</code>.
     */
    public final TableField<UserInfoConfigRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.user_info_config.auditor_id</code>.
     */
    public final TableField<UserInfoConfigRecord, Long> AUDITOR_ID = createField(DSL.name("auditor_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    private UserInfoConfig(Name alias, Table<UserInfoConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserInfoConfig(Name alias, Table<UserInfoConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.user_info_config</code> table reference
     */
    public UserInfoConfig(String alias) {
        this(DSL.name(alias), USER_INFO_CONFIG);
    }

    /**
     * Create an aliased <code>material.user_info_config</code> table reference
     */
    public UserInfoConfig(Name alias) {
        this(alias, USER_INFO_CONFIG);
    }

    /**
     * Create a <code>material.user_info_config</code> table reference
     */
    public UserInfoConfig() {
        this(DSL.name("user_info_config"), null);
    }

    public <O extends Record> UserInfoConfig(Table<O> child, ForeignKey<O, UserInfoConfigRecord> key) {
        super(child, key, USER_INFO_CONFIG);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public UniqueKey<UserInfoConfigRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1;
    }

    @Override
    public UserInfoConfig as(String alias) {
        return new UserInfoConfig(DSL.name(alias), this);
    }

    @Override
    public UserInfoConfig as(Name alias) {
        return new UserInfoConfig(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInfoConfig rename(String name) {
        return new UserInfoConfig(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserInfoConfig rename(Name name) {
        return new UserInfoConfig(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
