/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.CampaignUserUrlRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CampaignUserUrl extends TableImpl<CampaignUserUrlRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.campaign_user_url</code>
     */
    public static final CampaignUserUrl CAMPAIGN_USER_URL = new CampaignUserUrl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CampaignUserUrlRecord> getRecordType() {
        return CampaignUserUrlRecord.class;
    }

    /**
     * The column <code>naudit.campaign_user_url.id</code>.
     */
    public final TableField<CampaignUserUrlRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.campaign_user_url.uc_id</code>.
     */
    public final TableField<CampaignUserUrlRecord, Long> UC_ID = createField(DSL.name("uc_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.campaign_user_url.url_id</code>.
     */
    public final TableField<CampaignUserUrlRecord, Long> URL_ID = createField(DSL.name("url_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.campaign_user_url.cid</code>.
     */
    public final TableField<CampaignUserUrlRecord, Long> CID = createField(DSL.name("cid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.campaign_user_url.ccid</code>.
     */
    public final TableField<CampaignUserUrlRecord, Long> CCID = createField(DSL.name("ccid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.campaign_user_url.url_type</code>.
     */
    public final TableField<CampaignUserUrlRecord, Integer> URL_TYPE = createField(DSL.name("url_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.campaign_user_url.create_time</code>.
     */
    public final TableField<CampaignUserUrlRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private CampaignUserUrl(Name alias, Table<CampaignUserUrlRecord> aliased) {
        this(alias, aliased, null);
    }

    private CampaignUserUrl(Name alias, Table<CampaignUserUrlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.campaign_user_url</code> table reference
     */
    public CampaignUserUrl(String alias) {
        this(DSL.name(alias), CAMPAIGN_USER_URL);
    }

    /**
     * Create an aliased <code>naudit.campaign_user_url</code> table reference
     */
    public CampaignUserUrl(Name alias) {
        this(alias, CAMPAIGN_USER_URL);
    }

    /**
     * Create a <code>naudit.campaign_user_url</code> table reference
     */
    public CampaignUserUrl() {
        this(DSL.name("campaign_user_url"), null);
    }

    public <O extends Record> CampaignUserUrl(Table<O> child, ForeignKey<O, CampaignUserUrlRecord> key) {
        super(child, key, CAMPAIGN_USER_URL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<CampaignUserUrlRecord, Long> getIdentity() {
        return (Identity<CampaignUserUrlRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CampaignUserUrlRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_1A;
    }

    @Override
    public CampaignUserUrl as(String alias) {
        return new CampaignUserUrl(DSL.name(alias), this);
    }

    @Override
    public CampaignUserUrl as(Name alias) {
        return new CampaignUserUrl(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CampaignUserUrl rename(String name) {
        return new CampaignUserUrl(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CampaignUserUrl rename(Name name) {
        return new CampaignUserUrl(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, Integer, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
