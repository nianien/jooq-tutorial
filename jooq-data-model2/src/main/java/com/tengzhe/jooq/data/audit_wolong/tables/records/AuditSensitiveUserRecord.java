/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables.records;


import com.tengzhe.jooq.data.audit_wolong.tables.AuditSensitiveUser;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditSensitiveUserRecord extends UpdatableRecordImpl<AuditSensitiveUserRecord> implements Record7<Long, Long, Long, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.operatorid</code>.
     */
    public void setOperatorid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.operatorid</code>.
     */
    public Long getOperatorid() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>audit_wolong.audit_sensitive_user.sensitive_userid</code>.
     */
    public void setSensitiveUserid(Long value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>audit_wolong.audit_sensitive_user.sensitive_userid</code>.
     */
    public Long getSensitiveUserid() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.add_reason</code>.
     */
    public void setAddReason(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.add_reason</code>.
     */
    public String getAddReason() {
        return (String) get(3);
    }

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.remark</code>.
     */
    public void setRemark(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.remark</code>.
     */
    public String getRemark() {
        return (String) get(4);
    }

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>audit_wolong.audit_sensitive_user.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_sensitive_user.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.OPERATORID;
    }

    @Override
    public Field<Long> field3() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.SENSITIVE_USERID;
    }

    @Override
    public Field<String> field4() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.ADD_REASON;
    }

    @Override
    public Field<String> field5() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.REMARK;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return AuditSensitiveUser.AUDIT_SENSITIVE_USER.MODIFY_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOperatorid();
    }

    @Override
    public Long component3() {
        return getSensitiveUserid();
    }

    @Override
    public String component4() {
        return getAddReason();
    }

    @Override
    public String component5() {
        return getRemark();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getModifyTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOperatorid();
    }

    @Override
    public Long value3() {
        return getSensitiveUserid();
    }

    @Override
    public String value4() {
        return getAddReason();
    }

    @Override
    public String value5() {
        return getRemark();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getModifyTime();
    }

    @Override
    public AuditSensitiveUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value2(Long value) {
        setOperatorid(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value3(Long value) {
        setSensitiveUserid(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value4(String value) {
        setAddReason(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value5(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord value7(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AuditSensitiveUserRecord values(Long value1, Long value2, Long value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditSensitiveUserRecord
     */
    public AuditSensitiveUserRecord() {
        super(AuditSensitiveUser.AUDIT_SENSITIVE_USER);
    }

    /**
     * Create a detached, initialised AuditSensitiveUserRecord
     */
    public AuditSensitiveUserRecord(Long id, Long operatorid, Long sensitiveUserid, String addReason, String remark, LocalDateTime createTime, LocalDateTime modifyTime) {
        super(AuditSensitiveUser.AUDIT_SENSITIVE_USER);

        setId(id);
        setOperatorid(operatorid);
        setSensitiveUserid(sensitiveUserid);
        setAddReason(addReason);
        setRemark(remark);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
    }

    /**
     * Create a detached, initialised AuditSensitiveUserRecord
     */
    public AuditSensitiveUserRecord(com.tengzhe.jooq.data.audit_wolong.tables.pojos.AuditSensitiveUser value) {
        super(AuditSensitiveUser.AUDIT_SENSITIVE_USER);

        if (value != null) {
            setId(value.getId());
            setOperatorid(value.getOperatorid());
            setSensitiveUserid(value.getSensitiveUserid());
            setAddReason(value.getAddReason());
            setRemark(value.getRemark());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
        }
    }
}
