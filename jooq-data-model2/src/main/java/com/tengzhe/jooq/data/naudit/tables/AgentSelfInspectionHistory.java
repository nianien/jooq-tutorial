/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.AgentSelfInspectionHistoryRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AgentSelfInspectionHistory extends TableImpl<AgentSelfInspectionHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>naudit.agent_self_inspection_history</code>
     */
    public static final AgentSelfInspectionHistory AGENT_SELF_INSPECTION_HISTORY = new AgentSelfInspectionHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgentSelfInspectionHistoryRecord> getRecordType() {
        return AgentSelfInspectionHistoryRecord.class;
    }

    /**
     * The column <code>naudit.agent_self_inspection_history.id</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.user_id</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.reason_type</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Integer> REASON_TYPE = createField(DSL.name("reason_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.audit_state</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Integer> AUDIT_STATE = createField(DSL.name("audit_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column
     * <code>naudit.agent_self_inspection_history.audit_result</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, String> AUDIT_RESULT = createField(DSL.name("audit_result"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.operator_id</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Long> OPERATOR_ID = createField(DSL.name("operator_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column
     * <code>naudit.agent_self_inspection_history.operator_name</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, String> OPERATOR_NAME = createField(DSL.name("operator_name"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.audit_time</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, LocalDateTime> AUDIT_TIME = createField(DSL.name("audit_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("'9999-12-31 23:59:59'", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.agent_self_inspection_history.date</code>.
     */
    public final TableField<AgentSelfInspectionHistoryRecord, Integer> DATE = createField(DSL.name("date"), SQLDataType.INTEGER.nullable(false), this, "");

    private AgentSelfInspectionHistory(Name alias, Table<AgentSelfInspectionHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private AgentSelfInspectionHistory(Name alias, Table<AgentSelfInspectionHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.agent_self_inspection_history</code> table
     * reference
     */
    public AgentSelfInspectionHistory(String alias) {
        this(DSL.name(alias), AGENT_SELF_INSPECTION_HISTORY);
    }

    /**
     * Create an aliased <code>naudit.agent_self_inspection_history</code> table
     * reference
     */
    public AgentSelfInspectionHistory(Name alias) {
        this(alias, AGENT_SELF_INSPECTION_HISTORY);
    }

    /**
     * Create a <code>naudit.agent_self_inspection_history</code> table
     * reference
     */
    public AgentSelfInspectionHistory() {
        this(DSL.name("agent_self_inspection_history"), null);
    }

    public <O extends Record> AgentSelfInspectionHistory(Table<O> child, ForeignKey<O, AgentSelfInspectionHistoryRecord> key) {
        super(child, key, AGENT_SELF_INSPECTION_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<AgentSelfInspectionHistoryRecord, Long> getIdentity() {
        return (Identity<AgentSelfInspectionHistoryRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AgentSelfInspectionHistoryRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_EC;
    }

    @Override
    public AgentSelfInspectionHistory as(String alias) {
        return new AgentSelfInspectionHistory(DSL.name(alias), this);
    }

    @Override
    public AgentSelfInspectionHistory as(Name alias) {
        return new AgentSelfInspectionHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AgentSelfInspectionHistory rename(String name) {
        return new AgentSelfInspectionHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AgentSelfInspectionHistory rename(Name name) {
        return new AgentSelfInspectionHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, Integer, String, Long, String, LocalDateTime, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
