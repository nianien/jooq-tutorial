/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables;


import com.tengzhe.jooq.data.audit_wolong.AuditWolong;
import com.tengzhe.jooq.data.audit_wolong.Keys;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AuditWaitAutoRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditWaitAuto extends TableImpl<AuditWaitAutoRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>audit_wolong.audit_wait_auto</code>
     */
    public static final AuditWaitAuto AUDIT_WAIT_AUTO = new AuditWaitAuto();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditWaitAutoRecord> getRecordType() {
        return AuditWaitAutoRecord.class;
    }

    /**
     * The column <code>audit_wolong.audit_wait_auto.id</code>.
     */
    public final TableField<AuditWaitAutoRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.userid</code>.
     */
    public final TableField<AuditWaitAutoRecord, Long> USERID = createField(DSL.name("userid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.unitid</code>.
     */
    public final TableField<AuditWaitAutoRecord, Long> UNITID = createField(DSL.name("unitid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.umod</code>.
     */
    public final TableField<AuditWaitAutoRecord, Integer> UMOD = createField(DSL.name("umod"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.type</code>.
     */
    public final TableField<AuditWaitAutoRecord, Integer> TYPE = createField(DSL.name("type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.status</code>.
     */
    public final TableField<AuditWaitAutoRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.create_time</code>.
     */
    public final TableField<AuditWaitAutoRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.mids</code>.
     */
    public final TableField<AuditWaitAutoRecord, String> MIDS = createField(DSL.name("mids"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.idea_num</code>.
     */
    public final TableField<AuditWaitAutoRecord, Integer> IDEA_NUM = createField(DSL.name("idea_num"), SQLDataType.INTEGER.defaultValue(DSL.field("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.audit_wait_auto.priority</code>.
     */
    public final TableField<AuditWaitAutoRecord, Integer> PRIORITY = createField(DSL.name("priority"), SQLDataType.INTEGER.defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    private AuditWaitAuto(Name alias, Table<AuditWaitAutoRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditWaitAuto(Name alias, Table<AuditWaitAutoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_wolong.audit_wait_auto</code> table
     * reference
     */
    public AuditWaitAuto(String alias) {
        this(DSL.name(alias), AUDIT_WAIT_AUTO);
    }

    /**
     * Create an aliased <code>audit_wolong.audit_wait_auto</code> table
     * reference
     */
    public AuditWaitAuto(Name alias) {
        this(alias, AUDIT_WAIT_AUTO);
    }

    /**
     * Create a <code>audit_wolong.audit_wait_auto</code> table reference
     */
    public AuditWaitAuto() {
        this(DSL.name("audit_wait_auto"), null);
    }

    public <O extends Record> AuditWaitAuto(Table<O> child, ForeignKey<O, AuditWaitAutoRecord> key) {
        super(child, key, AUDIT_WAIT_AUTO);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : AuditWolong.AUDIT_WOLONG;
    }

    @Override
    public Identity<AuditWaitAutoRecord, Long> getIdentity() {
        return (Identity<AuditWaitAutoRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditWaitAutoRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_7;
    }

    @Override
    public AuditWaitAuto as(String alias) {
        return new AuditWaitAuto(DSL.name(alias), this);
    }

    @Override
    public AuditWaitAuto as(Name alias) {
        return new AuditWaitAuto(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditWaitAuto rename(String name) {
        return new AuditWaitAuto(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditWaitAuto rename(Name name) {
        return new AuditWaitAuto(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, Long, Integer, Integer, Integer, LocalDateTime, String, Integer, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
