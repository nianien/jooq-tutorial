/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables.records;


import com.tengzhe.jooq.data.audit_wolong.tables.AuditManualRiskUser;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditManualRiskUserRecord extends UpdatableRecordImpl<AuditManualRiskUserRecord> implements Record7<Long, Long, LocalDateTime, LocalDateTime, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.risk_type</code>.
     */
    public void setRiskType(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.risk_type</code>.
     */
    public Integer getRiskType() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.task_type</code>.
     */
    public void setTaskType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.task_type</code>.
     */
    public Integer getTaskType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>audit_wolong.audit_manual_risk_user.operate</code>.
     */
    public void setOperate(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>audit_wolong.audit_manual_risk_user.operate</code>.
     */
    public Integer getOperate() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, LocalDateTime, LocalDateTime, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, LocalDateTime, LocalDateTime, Integer, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.MODIFY_TIME;
    }

    @Override
    public Field<Integer> field5() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.RISK_TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.TASK_TYPE;
    }

    @Override
    public Field<Integer> field7() {
        return AuditManualRiskUser.AUDIT_MANUAL_RISK_USER.OPERATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component4() {
        return getModifyTime();
    }

    @Override
    public Integer component5() {
        return getRiskType();
    }

    @Override
    public Integer component6() {
        return getTaskType();
    }

    @Override
    public Integer component7() {
        return getOperate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value4() {
        return getModifyTime();
    }

    @Override
    public Integer value5() {
        return getRiskType();
    }

    @Override
    public Integer value6() {
        return getTaskType();
    }

    @Override
    public Integer value7() {
        return getOperate();
    }

    @Override
    public AuditManualRiskUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value4(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value5(Integer value) {
        setRiskType(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value6(Integer value) {
        setTaskType(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord value7(Integer value) {
        setOperate(value);
        return this;
    }

    @Override
    public AuditManualRiskUserRecord values(Long value1, Long value2, LocalDateTime value3, LocalDateTime value4, Integer value5, Integer value6, Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuditManualRiskUserRecord
     */
    public AuditManualRiskUserRecord() {
        super(AuditManualRiskUser.AUDIT_MANUAL_RISK_USER);
    }

    /**
     * Create a detached, initialised AuditManualRiskUserRecord
     */
    public AuditManualRiskUserRecord(Long id, Long userId, LocalDateTime createTime, LocalDateTime modifyTime, Integer riskType, Integer taskType, Integer operate) {
        super(AuditManualRiskUser.AUDIT_MANUAL_RISK_USER);

        setId(id);
        setUserId(userId);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        setRiskType(riskType);
        setTaskType(taskType);
        setOperate(operate);
    }

    /**
     * Create a detached, initialised AuditManualRiskUserRecord
     */
    public AuditManualRiskUserRecord(com.tengzhe.jooq.data.audit_wolong.tables.pojos.AuditManualRiskUser value) {
        super(AuditManualRiskUser.AUDIT_MANUAL_RISK_USER);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
            setRiskType(value.getRiskType());
            setTaskType(value.getTaskType());
            setOperate(value.getOperate());
        }
    }
}
