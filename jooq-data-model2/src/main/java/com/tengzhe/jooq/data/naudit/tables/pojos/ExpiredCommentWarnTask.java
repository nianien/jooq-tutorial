/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpiredCommentWarnTask implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long          id;
    private Long          commentId;
    private Integer       commentType;
    private Long          targetId;
    private Integer       targetType;
    private String        bizType;
    private String        content;
    private LocalDateTime expireTime;
    private Long          commentOperator;
    private LocalDateTime commentCreateTime;
    private Integer       state;
    private Long          operator;
    private LocalDateTime createTime;
    private LocalDateTime handleTime;

    public ExpiredCommentWarnTask() {}

    public ExpiredCommentWarnTask(ExpiredCommentWarnTask value) {
        this.id = value.id;
        this.commentId = value.commentId;
        this.commentType = value.commentType;
        this.targetId = value.targetId;
        this.targetType = value.targetType;
        this.bizType = value.bizType;
        this.content = value.content;
        this.expireTime = value.expireTime;
        this.commentOperator = value.commentOperator;
        this.commentCreateTime = value.commentCreateTime;
        this.state = value.state;
        this.operator = value.operator;
        this.createTime = value.createTime;
        this.handleTime = value.handleTime;
    }

    public ExpiredCommentWarnTask(
        Long          id,
        Long          commentId,
        Integer       commentType,
        Long          targetId,
        Integer       targetType,
        String        bizType,
        String        content,
        LocalDateTime expireTime,
        Long          commentOperator,
        LocalDateTime commentCreateTime,
        Integer       state,
        Long          operator,
        LocalDateTime createTime,
        LocalDateTime handleTime
    ) {
        this.id = id;
        this.commentId = commentId;
        this.commentType = commentType;
        this.targetId = targetId;
        this.targetType = targetType;
        this.bizType = bizType;
        this.content = content;
        this.expireTime = expireTime;
        this.commentOperator = commentOperator;
        this.commentCreateTime = commentCreateTime;
        this.state = state;
        this.operator = operator;
        this.createTime = createTime;
        this.handleTime = handleTime;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.comment_id</code>.
     */
    public Long getCommentId() {
        return this.commentId;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.comment_id</code>.
     */
    public void setCommentId(Long commentId) {
        this.commentId = commentId;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.comment_type</code>.
     */
    public Integer getCommentType() {
        return this.commentType;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.comment_type</code>.
     */
    public void setCommentType(Integer commentType) {
        this.commentType = commentType;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.target_id</code>.
     */
    public Long getTargetId() {
        return this.targetId;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.target_id</code>.
     */
    public void setTargetId(Long targetId) {
        this.targetId = targetId;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.target_type</code>.
     */
    public Integer getTargetType() {
        return this.targetType;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.target_type</code>.
     */
    public void setTargetType(Integer targetType) {
        this.targetType = targetType;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.biz_type</code>.
     */
    public String getBizType() {
        return this.bizType;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.biz_type</code>.
     */
    public void setBizType(String bizType) {
        this.bizType = bizType;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.content</code>.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.expire_time</code>.
     */
    public LocalDateTime getExpireTime() {
        return this.expireTime;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.expire_time</code>.
     */
    public void setExpireTime(LocalDateTime expireTime) {
        this.expireTime = expireTime;
    }

    /**
     * Getter for
     * <code>naudit.expired_comment_warn_task.comment_operator</code>.
     */
    public Long getCommentOperator() {
        return this.commentOperator;
    }

    /**
     * Setter for
     * <code>naudit.expired_comment_warn_task.comment_operator</code>.
     */
    public void setCommentOperator(Long commentOperator) {
        this.commentOperator = commentOperator;
    }

    /**
     * Getter for
     * <code>naudit.expired_comment_warn_task.comment_create_time</code>.
     */
    public LocalDateTime getCommentCreateTime() {
        return this.commentCreateTime;
    }

    /**
     * Setter for
     * <code>naudit.expired_comment_warn_task.comment_create_time</code>.
     */
    public void setCommentCreateTime(LocalDateTime commentCreateTime) {
        this.commentCreateTime = commentCreateTime;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.state</code>.
     */
    public Integer getState() {
        return this.state;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.state</code>.
     */
    public void setState(Integer state) {
        this.state = state;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.operator</code>.
     */
    public Long getOperator() {
        return this.operator;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.operator</code>.
     */
    public void setOperator(Long operator) {
        this.operator = operator;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.create_time</code>.
     */
    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for <code>naudit.expired_comment_warn_task.handle_time</code>.
     */
    public LocalDateTime getHandleTime() {
        return this.handleTime;
    }

    /**
     * Setter for <code>naudit.expired_comment_warn_task.handle_time</code>.
     */
    public void setHandleTime(LocalDateTime handleTime) {
        this.handleTime = handleTime;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ExpiredCommentWarnTask (");

        sb.append(id);
        sb.append(", ").append(commentId);
        sb.append(", ").append(commentType);
        sb.append(", ").append(targetId);
        sb.append(", ").append(targetType);
        sb.append(", ").append(bizType);
        sb.append(", ").append(content);
        sb.append(", ").append(expireTime);
        sb.append(", ").append(commentOperator);
        sb.append(", ").append(commentCreateTime);
        sb.append(", ").append(state);
        sb.append(", ").append(operator);
        sb.append(", ").append(createTime);
        sb.append(", ").append(handleTime);

        sb.append(")");
        return sb.toString();
    }
}
