/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_wolong.tables;


import com.tengzhe.jooq.data.audit_wolong.AuditWolong;
import com.tengzhe.jooq.data.audit_wolong.Keys;
import com.tengzhe.jooq.data.audit_wolong.tables.records.AraMaterialRiskStatRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AraMaterialRiskStat extends TableImpl<AraMaterialRiskStatRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>audit_wolong.ara_material_risk_stat</code>
     */
    public static final AraMaterialRiskStat ARA_MATERIAL_RISK_STAT = new AraMaterialRiskStat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AraMaterialRiskStatRecord> getRecordType() {
        return AraMaterialRiskStatRecord.class;
    }

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.id</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.tag_id</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, Long> TAG_ID = createField(DSL.name("tag_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.tag_name</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, String> TAG_NAME = createField(DSL.name("tag_name"), SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.count</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, Long> COUNT = createField(DSL.name("count"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.samp_date</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, String> SAMP_DATE = createField(DSL.name("samp_date"), SQLDataType.CHAR(8).nullable(false), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.dimension</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, Integer> DIMENSION = createField(DSL.name("dimension"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.create_time</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>audit_wolong.ara_material_risk_stat.modify_time</code>.
     */
    public final TableField<AraMaterialRiskStatRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AraMaterialRiskStat(Name alias, Table<AraMaterialRiskStatRecord> aliased) {
        this(alias, aliased, null);
    }

    private AraMaterialRiskStat(Name alias, Table<AraMaterialRiskStatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_wolong.ara_material_risk_stat</code> table
     * reference
     */
    public AraMaterialRiskStat(String alias) {
        this(DSL.name(alias), ARA_MATERIAL_RISK_STAT);
    }

    /**
     * Create an aliased <code>audit_wolong.ara_material_risk_stat</code> table
     * reference
     */
    public AraMaterialRiskStat(Name alias) {
        this(alias, ARA_MATERIAL_RISK_STAT);
    }

    /**
     * Create a <code>audit_wolong.ara_material_risk_stat</code> table reference
     */
    public AraMaterialRiskStat() {
        this(DSL.name("ara_material_risk_stat"), null);
    }

    public <O extends Record> AraMaterialRiskStat(Table<O> child, ForeignKey<O, AraMaterialRiskStatRecord> key) {
        super(child, key, ARA_MATERIAL_RISK_STAT);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : AuditWolong.AUDIT_WOLONG;
    }

    @Override
    public Identity<AraMaterialRiskStatRecord, Long> getIdentity() {
        return (Identity<AraMaterialRiskStatRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AraMaterialRiskStatRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_83;
    }

    @Override
    public AraMaterialRiskStat as(String alias) {
        return new AraMaterialRiskStat(DSL.name(alias), this);
    }

    @Override
    public AraMaterialRiskStat as(Name alias) {
        return new AraMaterialRiskStat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AraMaterialRiskStat rename(String name) {
        return new AraMaterialRiskStat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AraMaterialRiskStat rename(Name name) {
        return new AraMaterialRiskStat(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, Long, String, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
