/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.naudit.tables;


import com.tengzhe.jooq.data.naudit.Keys;
import com.tengzhe.jooq.data.naudit.Naudit;
import com.tengzhe.jooq.data.naudit.tables.records.AraIllegalMaterialRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AraIllegalMaterial extends TableImpl<AraIllegalMaterialRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>naudit.ara_illegal_material</code>
     */
    public static final AraIllegalMaterial ARA_ILLEGAL_MATERIAL = new AraIllegalMaterial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AraIllegalMaterialRecord> getRecordType() {
        return AraIllegalMaterialRecord.class;
    }

    /**
     * The column <code>naudit.ara_illegal_material.id</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.clue_id</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Long> CLUE_ID = createField(DSL.name("clue_id"), SQLDataType.BIGINT.defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.user_id</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.ad_url</code>.
     */
    public final TableField<AraIllegalMaterialRecord, String> AD_URL = createField(DSL.name("ad_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.accuracy</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Integer> ACCURACY = createField(DSL.name("accuracy"), SQLDataType.INTEGER.defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.idea_id</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Long> IDEA_ID = createField(DSL.name("idea_id"), SQLDataType.BIGINT.defaultValue(DSL.field("-1", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.show_detail</code>.
     */
    public final TableField<AraIllegalMaterialRecord, String> SHOW_DETAIL = createField(DSL.name("show_detail"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>naudit.ara_illegal_material.show_time</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Integer> SHOW_TIME = createField(DSL.name("show_time"), SQLDataType.INTEGER.defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.on_time</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Integer> ON_TIME = createField(DSL.name("on_time"), SQLDataType.INTEGER.defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.off_time</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Integer> OFF_TIME = createField(DSL.name("off_time"), SQLDataType.INTEGER.defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.consume</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Long> CONSUME = createField(DSL.name("consume"), SQLDataType.BIGINT.defaultValue(DSL.field("0", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.state</code>.
     */
    public final TableField<AraIllegalMaterialRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.create_time</code>.
     */
    public final TableField<AraIllegalMaterialRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>naudit.ara_illegal_material.modify_time</code>.
     */
    public final TableField<AraIllegalMaterialRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AraIllegalMaterial(Name alias, Table<AraIllegalMaterialRecord> aliased) {
        this(alias, aliased, null);
    }

    private AraIllegalMaterial(Name alias, Table<AraIllegalMaterialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>naudit.ara_illegal_material</code> table
     * reference
     */
    public AraIllegalMaterial(String alias) {
        this(DSL.name(alias), ARA_ILLEGAL_MATERIAL);
    }

    /**
     * Create an aliased <code>naudit.ara_illegal_material</code> table
     * reference
     */
    public AraIllegalMaterial(Name alias) {
        this(alias, ARA_ILLEGAL_MATERIAL);
    }

    /**
     * Create a <code>naudit.ara_illegal_material</code> table reference
     */
    public AraIllegalMaterial() {
        this(DSL.name("ara_illegal_material"), null);
    }

    public <O extends Record> AraIllegalMaterial(Table<O> child, ForeignKey<O, AraIllegalMaterialRecord> key) {
        super(child, key, ARA_ILLEGAL_MATERIAL);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Naudit.NAUDIT;
    }

    @Override
    public Identity<AraIllegalMaterialRecord, Long> getIdentity() {
        return (Identity<AraIllegalMaterialRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AraIllegalMaterialRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3E;
    }

    @Override
    public AraIllegalMaterial as(String alias) {
        return new AraIllegalMaterial(DSL.name(alias), this);
    }

    @Override
    public AraIllegalMaterial as(Name alias) {
        return new AraIllegalMaterial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AraIllegalMaterial rename(String name) {
        return new AraIllegalMaterial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AraIllegalMaterial rename(Name name) {
        return new AraIllegalMaterial(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, Long, Long, String, Integer, Long, String, Integer, Integer, Integer, Long, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
