/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.AuditRuleMetaRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditRuleMeta extends TableImpl<AuditRuleMetaRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.audit_rule_meta</code>
     */
    public static final AuditRuleMeta AUDIT_RULE_META = new AuditRuleMeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditRuleMetaRecord> getRecordType() {
        return AuditRuleMetaRecord.class;
    }

    /**
     * The column <code>material.audit_rule_meta.id</code>.
     */
    public final TableField<AuditRuleMetaRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>material.audit_rule_meta.entity_type</code>.
     */
    public final TableField<AuditRuleMetaRecord, Integer> ENTITY_TYPE = createField(DSL.name("entity_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.audit_rule_meta.field</code>.
     */
    public final TableField<AuditRuleMetaRecord, String> FIELD = createField(DSL.name("field"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>material.audit_rule_meta.name</code>.
     */
    public final TableField<AuditRuleMetaRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>material.audit_rule_meta.fact_field</code>.
     */
    public final TableField<AuditRuleMetaRecord, String> FACT_FIELD = createField(DSL.name("fact_field"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>material.audit_rule_meta.fact_multiple</code>.
     */
    public final TableField<AuditRuleMetaRecord, Integer> FACT_MULTIPLE = createField(DSL.name("fact_multiple"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.audit_rule_meta.field_type</code>.
     */
    public final TableField<AuditRuleMetaRecord, Integer> FIELD_TYPE = createField(DSL.name("field_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.audit_rule_meta.state</code>.
     */
    public final TableField<AuditRuleMetaRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.audit_rule_meta.operator</code>.
     */
    public final TableField<AuditRuleMetaRecord, String> OPERATOR = createField(DSL.name("operator"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>material.audit_rule_meta.create_time</code>.
     */
    public final TableField<AuditRuleMetaRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.audit_rule_meta.modify_time</code>.
     */
    public final TableField<AuditRuleMetaRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AuditRuleMeta(Name alias, Table<AuditRuleMetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditRuleMeta(Name alias, Table<AuditRuleMetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.audit_rule_meta</code> table reference
     */
    public AuditRuleMeta(String alias) {
        this(DSL.name(alias), AUDIT_RULE_META);
    }

    /**
     * Create an aliased <code>material.audit_rule_meta</code> table reference
     */
    public AuditRuleMeta(Name alias) {
        this(alias, AUDIT_RULE_META);
    }

    /**
     * Create a <code>material.audit_rule_meta</code> table reference
     */
    public AuditRuleMeta() {
        this(DSL.name("audit_rule_meta"), null);
    }

    public <O extends Record> AuditRuleMeta(Table<O> child, ForeignKey<O, AuditRuleMetaRecord> key) {
        super(child, key, AUDIT_RULE_META);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public Identity<AuditRuleMetaRecord, Long> getIdentity() {
        return (Identity<AuditRuleMetaRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditRuleMetaRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_3B;
    }

    @Override
    public AuditRuleMeta as(String alias) {
        return new AuditRuleMeta(DSL.name(alias), this);
    }

    @Override
    public AuditRuleMeta as(Name alias) {
        return new AuditRuleMeta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditRuleMeta rename(String name) {
        return new AuditRuleMeta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditRuleMeta rename(Name name) {
        return new AuditRuleMeta(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, Integer, String, String, String, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
