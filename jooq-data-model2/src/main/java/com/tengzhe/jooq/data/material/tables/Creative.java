/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material.tables;


import com.tengzhe.jooq.data.material.Keys;
import com.tengzhe.jooq.data.material.Material;
import com.tengzhe.jooq.data.material.tables.records.CreativeRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Creative extends TableImpl<CreativeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>material.creative</code>
     */
    public static final Creative CREATIVE = new Creative();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CreativeRecord> getRecordType() {
        return CreativeRecord.class;
    }

    /**
     * The column <code>material.creative.id</code>.
     */
    public final TableField<CreativeRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>material.creative.uc_id</code>.
     */
    public final TableField<CreativeRecord, Long> UC_ID = createField(DSL.name("uc_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.creative.user_id</code>.
     */
    public final TableField<CreativeRecord, Long> USER_ID = createField(DSL.name("user_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.creative.group_id</code>.
     */
    public final TableField<CreativeRecord, Long> GROUP_ID = createField(DSL.name("group_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.creative.campaign_id</code>.
     */
    public final TableField<CreativeRecord, Long> CAMPAIGN_ID = createField(DSL.name("campaign_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>material.creative.type</code>.
     */
    public final TableField<CreativeRecord, Integer> TYPE = createField(DSL.name("type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.style</code>.
     */
    public final TableField<CreativeRecord, Integer> STYLE = createField(DSL.name("style"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.feature</code>.
     */
    public final TableField<CreativeRecord, Integer> FEATURE = createField(DSL.name("feature"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.title</code>.
     */
    public final TableField<CreativeRecord, String> TITLE = createField(DSL.name("title"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.creative.description</code>.
     */
    public final TableField<CreativeRecord, String> DESCRIPTION = createField(DSL.name("description"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.creative.source</code>.
     */
    public final TableField<CreativeRecord, String> SOURCE = createField(DSL.name("source"), SQLDataType.VARCHAR(128).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.creative.target_url</code>.
     */
    public final TableField<CreativeRecord, String> TARGET_URL = createField(DSL.name("target_url"), SQLDataType.VARCHAR(1024).defaultValue(DSL.field("NULL", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.creative.content</code>.
     */
    public final TableField<CreativeRecord, String> CONTENT = createField(DSL.name("content"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>material.creative.wildcard_ids</code>.
     */
    public final TableField<CreativeRecord, String> WILDCARD_IDS = createField(DSL.name("wildcard_ids"), SQLDataType.VARCHAR(255).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>material.creative.download_type</code>.
     */
    public final TableField<CreativeRecord, Integer> DOWNLOAD_TYPE = createField(DSL.name("download_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.paused</code>.
     */
    public final TableField<CreativeRecord, Integer> PAUSED = createField(DSL.name("paused"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.ad_style_id</code>.
     */
    public final TableField<CreativeRecord, Integer> AD_STYLE_ID = createField(DSL.name("ad_style_id"), SQLDataType.INTEGER.defaultValue(DSL.field("NULL", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.ad_style_type</code>.
     */
    public final TableField<CreativeRecord, Integer> AD_STYLE_TYPE = createField(DSL.name("ad_style_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.logic_state</code>.
     */
    public final TableField<CreativeRecord, Integer> LOGIC_STATE = createField(DSL.name("logic_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.version</code>.
     */
    public final TableField<CreativeRecord, Long> VERSION = createField(DSL.name("version"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>material.creative.state</code>.
     */
    public final TableField<CreativeRecord, Integer> STATE = createField(DSL.name("state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.state_detail</code>.
     */
    public final TableField<CreativeRecord, Integer> STATE_DETAIL = createField(DSL.name("state_detail"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.pair_state</code>.
     */
    public final TableField<CreativeRecord, Integer> PAIR_STATE = createField(DSL.name("pair_state"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>material.creative.create_time</code>.
     */
    public final TableField<CreativeRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.creative.modify_time</code>.
     */
    public final TableField<CreativeRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>material.creative.video_id</code>.
     */
    public final TableField<CreativeRecord, Long> VIDEO_ID = createField(DSL.name("video_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'0'", SQLDataType.BIGINT)), this, "");

    private Creative(Name alias, Table<CreativeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Creative(Name alias, Table<CreativeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>material.creative</code> table reference
     */
    public Creative(String alias) {
        this(DSL.name(alias), CREATIVE);
    }

    /**
     * Create an aliased <code>material.creative</code> table reference
     */
    public Creative(Name alias) {
        this(alias, CREATIVE);
    }

    /**
     * Create a <code>material.creative</code> table reference
     */
    public Creative() {
        this(DSL.name("creative"), null);
    }

    public <O extends Record> Creative(Table<O> child, ForeignKey<O, CreativeRecord> key) {
        super(child, key, CREATIVE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Material.MATERIAL;
    }

    @Override
    public Identity<CreativeRecord, Long> getIdentity() {
        return (Identity<CreativeRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<CreativeRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_6;
    }

    @Override
    public Creative as(String alias) {
        return new Creative(DSL.name(alias), this);
    }

    @Override
    public Creative as(Name alias) {
        return new Creative(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Creative rename(String name) {
        return new Creative(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Creative rename(Name name) {
        return new Creative(name, null);
    }
}
