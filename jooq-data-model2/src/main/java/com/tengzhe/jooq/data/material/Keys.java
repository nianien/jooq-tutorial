/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.material;


import com.tengzhe.jooq.data.material.tables.AppAdIdea;
import com.tengzhe.jooq.data.material.tables.AraCompeteAdSample;
import com.tengzhe.jooq.data.material.tables.AraHcCreativeRiskDetail;
import com.tengzhe.jooq.data.material.tables.AraHcCreativeSample;
import com.tengzhe.jooq.data.material.tables.AraHcPvSample;
import com.tengzhe.jooq.data.material.tables.AraHcPvStat;
import com.tengzhe.jooq.data.material.tables.AraQueryWord;
import com.tengzhe.jooq.data.material.tables.AttachCreative;
import com.tengzhe.jooq.data.material.tables.AuditAppAdIdea;
import com.tengzhe.jooq.data.material.tables.AuditAppAdIdeaLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditAttachCreative;
import com.tengzhe.jooq.data.material.tables.AuditAttachCreativeLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditBrandCreative;
import com.tengzhe.jooq.data.material.tables.AuditBrandCreativeLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditBrandTargetUrl;
import com.tengzhe.jooq.data.material.tables.AuditBrandTargetUrlLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditCampaign;
import com.tengzhe.jooq.data.material.tables.AuditCampaignLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditCampaignMaterial;
import com.tengzhe.jooq.data.material.tables.AuditCptQmxingIdea;
import com.tengzhe.jooq.data.material.tables.AuditCptQmxingPackage;
import com.tengzhe.jooq.data.material.tables.AuditCreative;
import com.tengzhe.jooq.data.material.tables.AuditCreativeLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditDspIdea;
import com.tengzhe.jooq.data.material.tables.AuditEntityDetailLog;
import com.tengzhe.jooq.data.material.tables.AuditMicroIdea;
import com.tengzhe.jooq.data.material.tables.AuditMicroIdeaLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditPair;
import com.tengzhe.jooq.data.material.tables.AuditPatrolCampaign;
import com.tengzhe.jooq.data.material.tables.AuditPatrolCreative;
import com.tengzhe.jooq.data.material.tables.AuditPatrolRisk;
import com.tengzhe.jooq.data.material.tables.AuditPictureLib;
import com.tengzhe.jooq.data.material.tables.AuditPictureLibLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditRule;
import com.tengzhe.jooq.data.material.tables.AuditRuleMeta;
import com.tengzhe.jooq.data.material.tables.AuditRuleSet;
import com.tengzhe.jooq.data.material.tables.AuditSitePage;
import com.tengzhe.jooq.data.material.tables.AuditSitePageLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditUserLogo;
import com.tengzhe.jooq.data.material.tables.AuditUserLogoLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditVideo;
import com.tengzhe.jooq.data.material.tables.AuditVideoExchangeOrder;
import com.tengzhe.jooq.data.material.tables.AuditVideoExchangeOrderLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditVideoLogHistory;
import com.tengzhe.jooq.data.material.tables.AuditWordPackage;
import com.tengzhe.jooq.data.material.tables.AuditWordPackageLogHistory;
import com.tengzhe.jooq.data.material.tables.BrandCreative;
import com.tengzhe.jooq.data.material.tables.BrandTargetUrl;
import com.tengzhe.jooq.data.material.tables.Campaign;
import com.tengzhe.jooq.data.material.tables.CptQmxingIdea;
import com.tengzhe.jooq.data.material.tables.CptQmxingPackage;
import com.tengzhe.jooq.data.material.tables.CptQmxingPackageDetail;
import com.tengzhe.jooq.data.material.tables.Creative;
import com.tengzhe.jooq.data.material.tables.DownloadUrlDetail;
import com.tengzhe.jooq.data.material.tables.DspIdea;
import com.tengzhe.jooq.data.material.tables.MaterialAllocationHistory;
import com.tengzhe.jooq.data.material.tables.MicroIdea;
import com.tengzhe.jooq.data.material.tables.PendingVideoMaterial;
import com.tengzhe.jooq.data.material.tables.PictureLib;
import com.tengzhe.jooq.data.material.tables.QualityCheck;
import com.tengzhe.jooq.data.material.tables.QualityCheckAuditCampaign;
import com.tengzhe.jooq.data.material.tables.QualityCheckAuditCreative;
import com.tengzhe.jooq.data.material.tables.QualityCheckCampaignSnapshot;
import com.tengzhe.jooq.data.material.tables.QualityCheckCreativeSnapshot;
import com.tengzhe.jooq.data.material.tables.SitePage;
import com.tengzhe.jooq.data.material.tables.UserInfoConfig;
import com.tengzhe.jooq.data.material.tables.UserLogo;
import com.tengzhe.jooq.data.material.tables.Video;
import com.tengzhe.jooq.data.material.tables.VideoComment;
import com.tengzhe.jooq.data.material.tables.VideoExchangeOrder;
import com.tengzhe.jooq.data.material.tables.WordPackage;
import com.tengzhe.jooq.data.material.tables.WordPackageDetail;
import com.tengzhe.jooq.data.material.tables.records.AppAdIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.AraCompeteAdSampleRecord;
import com.tengzhe.jooq.data.material.tables.records.AraHcCreativeRiskDetailRecord;
import com.tengzhe.jooq.data.material.tables.records.AraHcCreativeSampleRecord;
import com.tengzhe.jooq.data.material.tables.records.AraHcPvSampleRecord;
import com.tengzhe.jooq.data.material.tables.records.AraHcPvStatRecord;
import com.tengzhe.jooq.data.material.tables.records.AraQueryWordRecord;
import com.tengzhe.jooq.data.material.tables.records.AttachCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditAppAdIdeaLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditAppAdIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditAttachCreativeLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditAttachCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditBrandCreativeLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditBrandCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditBrandTargetUrlLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditBrandTargetUrlRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCampaignLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCampaignMaterialRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCampaignRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCptQmxingIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCptQmxingPackageRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCreativeLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditDspIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditEntityDetailLogRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditMicroIdeaLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditMicroIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPairRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPatrolCampaignRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPatrolCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPatrolRiskRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPictureLibLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditPictureLibRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditRuleMetaRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditRuleRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditRuleSetRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditSitePageLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditSitePageRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditUserLogoLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditUserLogoRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditVideoExchangeOrderLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditVideoExchangeOrderRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditVideoLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditVideoRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditWordPackageLogHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.AuditWordPackageRecord;
import com.tengzhe.jooq.data.material.tables.records.BrandCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.BrandTargetUrlRecord;
import com.tengzhe.jooq.data.material.tables.records.CampaignRecord;
import com.tengzhe.jooq.data.material.tables.records.CptQmxingIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.CptQmxingPackageDetailRecord;
import com.tengzhe.jooq.data.material.tables.records.CptQmxingPackageRecord;
import com.tengzhe.jooq.data.material.tables.records.CreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.DownloadUrlDetailRecord;
import com.tengzhe.jooq.data.material.tables.records.DspIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.MaterialAllocationHistoryRecord;
import com.tengzhe.jooq.data.material.tables.records.MicroIdeaRecord;
import com.tengzhe.jooq.data.material.tables.records.PendingVideoMaterialRecord;
import com.tengzhe.jooq.data.material.tables.records.PictureLibRecord;
import com.tengzhe.jooq.data.material.tables.records.QualityCheckAuditCampaignRecord;
import com.tengzhe.jooq.data.material.tables.records.QualityCheckAuditCreativeRecord;
import com.tengzhe.jooq.data.material.tables.records.QualityCheckCampaignSnapshotRecord;
import com.tengzhe.jooq.data.material.tables.records.QualityCheckCreativeSnapshotRecord;
import com.tengzhe.jooq.data.material.tables.records.QualityCheckRecord;
import com.tengzhe.jooq.data.material.tables.records.SitePageRecord;
import com.tengzhe.jooq.data.material.tables.records.UserInfoConfigRecord;
import com.tengzhe.jooq.data.material.tables.records.UserLogoRecord;
import com.tengzhe.jooq.data.material.tables.records.VideoCommentRecord;
import com.tengzhe.jooq.data.material.tables.records.VideoExchangeOrderRecord;
import com.tengzhe.jooq.data.material.tables.records.VideoRecord;
import com.tengzhe.jooq.data.material.tables.records.WordPackageDetailRecord;
import com.tengzhe.jooq.data.material.tables.records.WordPackageRecord;

import javax.annotation.processing.Generated;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * material.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AppAdIdeaRecord> CONSTRAINT_709 = Internal.createUniqueKey(AppAdIdea.APP_AD_IDEA, DSL.name("CONSTRAINT_709"), new TableField[] { AppAdIdea.APP_AD_IDEA.ID }, true);
    public static final UniqueKey<AraCompeteAdSampleRecord> CONSTRAINT_7E = Internal.createUniqueKey(AraCompeteAdSample.ARA_COMPETE_AD_SAMPLE, DSL.name("CONSTRAINT_7E"), new TableField[] { AraCompeteAdSample.ARA_COMPETE_AD_SAMPLE.ID }, true);
    public static final UniqueKey<AraHcCreativeRiskDetailRecord> CONSTRAINT_3C = Internal.createUniqueKey(AraHcCreativeRiskDetail.ARA_HC_CREATIVE_RISK_DETAIL, DSL.name("CONSTRAINT_3C"), new TableField[] { AraHcCreativeRiskDetail.ARA_HC_CREATIVE_RISK_DETAIL.ID }, true);
    public static final UniqueKey<AraHcCreativeSampleRecord> CONSTRAINT_2E6 = Internal.createUniqueKey(AraHcCreativeSample.ARA_HC_CREATIVE_SAMPLE, DSL.name("CONSTRAINT_2E6"), new TableField[] { AraHcCreativeSample.ARA_HC_CREATIVE_SAMPLE.ID }, true);
    public static final UniqueKey<AraHcPvSampleRecord> CONSTRAINT_1A = Internal.createUniqueKey(AraHcPvSample.ARA_HC_PV_SAMPLE, DSL.name("CONSTRAINT_1A"), new TableField[] { AraHcPvSample.ARA_HC_PV_SAMPLE.ID }, true);
    public static final UniqueKey<AraHcPvStatRecord> CONSTRAINT_AF = Internal.createUniqueKey(AraHcPvStat.ARA_HC_PV_STAT, DSL.name("CONSTRAINT_AF"), new TableField[] { AraHcPvStat.ARA_HC_PV_STAT.ID }, true);
    public static final UniqueKey<AraQueryWordRecord> CONSTRAINT_EC = Internal.createUniqueKey(AraQueryWord.ARA_QUERY_WORD, DSL.name("CONSTRAINT_EC"), new TableField[] { AraQueryWord.ARA_QUERY_WORD.ID }, true);
    public static final UniqueKey<AttachCreativeRecord> CONSTRAINT_A = Internal.createUniqueKey(AttachCreative.ATTACH_CREATIVE, DSL.name("CONSTRAINT_A"), new TableField[] { AttachCreative.ATTACH_CREATIVE.ID }, true);
    public static final UniqueKey<AuditAppAdIdeaRecord> CONSTRAINT_C4 = Internal.createUniqueKey(AuditAppAdIdea.AUDIT_APP_AD_IDEA, DSL.name("CONSTRAINT_C4"), new TableField[] { AuditAppAdIdea.AUDIT_APP_AD_IDEA.ID }, true);
    public static final UniqueKey<AuditAppAdIdeaLogHistoryRecord> CONSTRAINT_79 = Internal.createUniqueKey(AuditAppAdIdeaLogHistory.AUDIT_APP_AD_IDEA_LOG_HISTORY, DSL.name("CONSTRAINT_79"), new TableField[] { AuditAppAdIdeaLogHistory.AUDIT_APP_AD_IDEA_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditAttachCreativeRecord> CONSTRAINT_8 = Internal.createUniqueKey(AuditAttachCreative.AUDIT_ATTACH_CREATIVE, DSL.name("CONSTRAINT_8"), new TableField[] { AuditAttachCreative.AUDIT_ATTACH_CREATIVE.ID }, true);
    public static final UniqueKey<AuditAttachCreativeLogHistoryRecord> CONSTRAINT_FA = Internal.createUniqueKey(AuditAttachCreativeLogHistory.AUDIT_ATTACH_CREATIVE_LOG_HISTORY, DSL.name("CONSTRAINT_FA"), new TableField[] { AuditAttachCreativeLogHistory.AUDIT_ATTACH_CREATIVE_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditBrandCreativeRecord> CONSTRAINT_A0 = Internal.createUniqueKey(AuditBrandCreative.AUDIT_BRAND_CREATIVE, DSL.name("CONSTRAINT_A0"), new TableField[] { AuditBrandCreative.AUDIT_BRAND_CREATIVE.ID }, true);
    public static final UniqueKey<AuditBrandCreativeLogHistoryRecord> CONSTRAINT_7C = Internal.createUniqueKey(AuditBrandCreativeLogHistory.AUDIT_BRAND_CREATIVE_LOG_HISTORY, DSL.name("CONSTRAINT_7C"), new TableField[] { AuditBrandCreativeLogHistory.AUDIT_BRAND_CREATIVE_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditBrandTargetUrlRecord> CONSTRAINT_5F = Internal.createUniqueKey(AuditBrandTargetUrl.AUDIT_BRAND_TARGET_URL, DSL.name("CONSTRAINT_5F"), new TableField[] { AuditBrandTargetUrl.AUDIT_BRAND_TARGET_URL.ID }, true);
    public static final UniqueKey<AuditBrandTargetUrlLogHistoryRecord> CONSTRAINT_FC = Internal.createUniqueKey(AuditBrandTargetUrlLogHistory.AUDIT_BRAND_TARGET_URL_LOG_HISTORY, DSL.name("CONSTRAINT_FC"), new TableField[] { AuditBrandTargetUrlLogHistory.AUDIT_BRAND_TARGET_URL_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditCampaignRecord> CONSTRAINT_5 = Internal.createUniqueKey(AuditCampaign.AUDIT_CAMPAIGN, DSL.name("CONSTRAINT_5"), new TableField[] { AuditCampaign.AUDIT_CAMPAIGN.ID }, true);
    public static final UniqueKey<AuditCampaignLogHistoryRecord> CONSTRAINT_CD = Internal.createUniqueKey(AuditCampaignLogHistory.AUDIT_CAMPAIGN_LOG_HISTORY, DSL.name("CONSTRAINT_CD"), new TableField[] { AuditCampaignLogHistory.AUDIT_CAMPAIGN_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditCampaignMaterialRecord> CONSTRAINT_E = Internal.createUniqueKey(AuditCampaignMaterial.AUDIT_CAMPAIGN_MATERIAL, DSL.name("CONSTRAINT_E"), new TableField[] { AuditCampaignMaterial.AUDIT_CAMPAIGN_MATERIAL.ID }, true);
    public static final UniqueKey<AuditCptQmxingIdeaRecord> CONSTRAINT_A2 = Internal.createUniqueKey(AuditCptQmxingIdea.AUDIT_CPT_QMXING_IDEA, DSL.name("CONSTRAINT_A2"), new TableField[] { AuditCptQmxingIdea.AUDIT_CPT_QMXING_IDEA.ID }, true);
    public static final UniqueKey<AuditCptQmxingPackageRecord> CONSTRAINT_2A = Internal.createUniqueKey(AuditCptQmxingPackage.AUDIT_CPT_QMXING_PACKAGE, DSL.name("CONSTRAINT_2A"), new TableField[] { AuditCptQmxingPackage.AUDIT_CPT_QMXING_PACKAGE.ID }, true);
    public static final UniqueKey<AuditCreativeRecord> CONSTRAINT_C = Internal.createUniqueKey(AuditCreative.AUDIT_CREATIVE, DSL.name("CONSTRAINT_C"), new TableField[] { AuditCreative.AUDIT_CREATIVE.ID }, true);
    public static final UniqueKey<AuditCreativeLogHistoryRecord> CONSTRAINT_2E = Internal.createUniqueKey(AuditCreativeLogHistory.AUDIT_CREATIVE_LOG_HISTORY, DSL.name("CONSTRAINT_2E"), new TableField[] { AuditCreativeLogHistory.AUDIT_CREATIVE_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditDspIdeaRecord> CONSTRAINT_7CB = Internal.createUniqueKey(AuditDspIdea.AUDIT_DSP_IDEA, DSL.name("CONSTRAINT_7CB"), new TableField[] { AuditDspIdea.AUDIT_DSP_IDEA.ID }, true);
    public static final UniqueKey<AuditEntityDetailLogRecord> CONSTRAINT_7 = Internal.createUniqueKey(AuditEntityDetailLog.AUDIT_ENTITY_DETAIL_LOG, DSL.name("CONSTRAINT_7"), new TableField[] { AuditEntityDetailLog.AUDIT_ENTITY_DETAIL_LOG.ID }, true);
    public static final UniqueKey<AuditMicroIdeaRecord> CONSTRAINT_A6 = Internal.createUniqueKey(AuditMicroIdea.AUDIT_MICRO_IDEA, DSL.name("CONSTRAINT_A6"), new TableField[] { AuditMicroIdea.AUDIT_MICRO_IDEA.ID }, true);
    public static final UniqueKey<AuditMicroIdeaLogHistoryRecord> CONSTRAINT_FD = Internal.createUniqueKey(AuditMicroIdeaLogHistory.AUDIT_MICRO_IDEA_LOG_HISTORY, DSL.name("CONSTRAINT_FD"), new TableField[] { AuditMicroIdeaLogHistory.AUDIT_MICRO_IDEA_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditPairRecord> CONSTRAINT_64 = Internal.createUniqueKey(AuditPair.AUDIT_PAIR, DSL.name("CONSTRAINT_64"), new TableField[] { AuditPair.AUDIT_PAIR.ID }, true);
    public static final UniqueKey<AuditPatrolCampaignRecord> CONSTRAINT_DC = Internal.createUniqueKey(AuditPatrolCampaign.AUDIT_PATROL_CAMPAIGN, DSL.name("CONSTRAINT_DC"), new TableField[] { AuditPatrolCampaign.AUDIT_PATROL_CAMPAIGN.ID }, true);
    public static final UniqueKey<AuditPatrolCreativeRecord> CONSTRAINT_50 = Internal.createUniqueKey(AuditPatrolCreative.AUDIT_PATROL_CREATIVE, DSL.name("CONSTRAINT_50"), new TableField[] { AuditPatrolCreative.AUDIT_PATROL_CREATIVE.ID }, true);
    public static final UniqueKey<AuditPatrolRiskRecord> CONSTRAINT_26 = Internal.createUniqueKey(AuditPatrolRisk.AUDIT_PATROL_RISK, DSL.name("CONSTRAINT_26"), new TableField[] { AuditPatrolRisk.AUDIT_PATROL_RISK.ID }, true);
    public static final UniqueKey<AuditPictureLibRecord> CONSTRAINT_82 = Internal.createUniqueKey(AuditPictureLib.AUDIT_PICTURE_LIB, DSL.name("CONSTRAINT_82"), new TableField[] { AuditPictureLib.AUDIT_PICTURE_LIB.ID }, true);
    public static final UniqueKey<AuditPictureLibLogHistoryRecord> CONSTRAINT_AB5 = Internal.createUniqueKey(AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY, DSL.name("CONSTRAINT_AB5"), new TableField[] { AuditPictureLibLogHistory.AUDIT_PICTURE_LIB_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditRuleRecord> CONSTRAINT_64E = Internal.createUniqueKey(AuditRule.AUDIT_RULE, DSL.name("CONSTRAINT_64E"), new TableField[] { AuditRule.AUDIT_RULE.ID }, true);
    public static final UniqueKey<AuditRuleMetaRecord> CONSTRAINT_3B = Internal.createUniqueKey(AuditRuleMeta.AUDIT_RULE_META, DSL.name("CONSTRAINT_3B"), new TableField[] { AuditRuleMeta.AUDIT_RULE_META.ID }, true);
    public static final UniqueKey<AuditRuleSetRecord> CONSTRAINT_8E = Internal.createUniqueKey(AuditRuleSet.AUDIT_RULE_SET, DSL.name("CONSTRAINT_8E"), new TableField[] { AuditRuleSet.AUDIT_RULE_SET.ID }, true);
    public static final UniqueKey<AuditSitePageRecord> CONSTRAINT_9 = Internal.createUniqueKey(AuditSitePage.AUDIT_SITE_PAGE, DSL.name("CONSTRAINT_9"), new TableField[] { AuditSitePage.AUDIT_SITE_PAGE.ID }, true);
    public static final UniqueKey<AuditSitePageLogHistoryRecord> CONSTRAINT_2A0 = Internal.createUniqueKey(AuditSitePageLogHistory.AUDIT_SITE_PAGE_LOG_HISTORY, DSL.name("CONSTRAINT_2A0"), new TableField[] { AuditSitePageLogHistory.AUDIT_SITE_PAGE_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditUserLogoRecord> CONSTRAINT_CC = Internal.createUniqueKey(AuditUserLogo.AUDIT_USER_LOGO, DSL.name("CONSTRAINT_CC"), new TableField[] { AuditUserLogo.AUDIT_USER_LOGO.ID }, true);
    public static final UniqueKey<AuditUserLogoLogHistoryRecord> CONSTRAINT_F2 = Internal.createUniqueKey(AuditUserLogoLogHistory.AUDIT_USER_LOGO_LOG_HISTORY, DSL.name("CONSTRAINT_F2"), new TableField[] { AuditUserLogoLogHistory.AUDIT_USER_LOGO_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditVideoRecord> CONSTRAINT_37 = Internal.createUniqueKey(AuditVideo.AUDIT_VIDEO, DSL.name("CONSTRAINT_37"), new TableField[] { AuditVideo.AUDIT_VIDEO.ID }, true);
    public static final UniqueKey<AuditVideoExchangeOrderRecord> CONSTRAINT_78 = Internal.createUniqueKey(AuditVideoExchangeOrder.AUDIT_VIDEO_EXCHANGE_ORDER, DSL.name("CONSTRAINT_78"), new TableField[] { AuditVideoExchangeOrder.AUDIT_VIDEO_EXCHANGE_ORDER.ID }, true);
    public static final UniqueKey<AuditVideoExchangeOrderLogHistoryRecord> CONSTRAINT_43 = Internal.createUniqueKey(AuditVideoExchangeOrderLogHistory.AUDIT_VIDEO_EXCHANGE_ORDER_LOG_HISTORY, DSL.name("CONSTRAINT_43"), new TableField[] { AuditVideoExchangeOrderLogHistory.AUDIT_VIDEO_EXCHANGE_ORDER_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditVideoLogHistoryRecord> CONSTRAINT_FF = Internal.createUniqueKey(AuditVideoLogHistory.AUDIT_VIDEO_LOG_HISTORY, DSL.name("CONSTRAINT_FF"), new TableField[] { AuditVideoLogHistory.AUDIT_VIDEO_LOG_HISTORY.ID }, true);
    public static final UniqueKey<AuditWordPackageRecord> CONSTRAINT_5E = Internal.createUniqueKey(AuditWordPackage.AUDIT_WORD_PACKAGE, DSL.name("CONSTRAINT_5E"), new TableField[] { AuditWordPackage.AUDIT_WORD_PACKAGE.ID }, true);
    public static final UniqueKey<AuditWordPackageLogHistoryRecord> CONSTRAINT_AB = Internal.createUniqueKey(AuditWordPackageLogHistory.AUDIT_WORD_PACKAGE_LOG_HISTORY, DSL.name("CONSTRAINT_AB"), new TableField[] { AuditWordPackageLogHistory.AUDIT_WORD_PACKAGE_LOG_HISTORY.ID }, true);
    public static final UniqueKey<BrandCreativeRecord> CONSTRAINT_70 = Internal.createUniqueKey(BrandCreative.BRAND_CREATIVE, DSL.name("CONSTRAINT_70"), new TableField[] { BrandCreative.BRAND_CREATIVE.ID }, true);
    public static final UniqueKey<BrandTargetUrlRecord> CONSTRAINT_CE = Internal.createUniqueKey(BrandTargetUrl.BRAND_TARGET_URL, DSL.name("CONSTRAINT_CE"), new TableField[] { BrandTargetUrl.BRAND_TARGET_URL.ID }, true);
    public static final UniqueKey<CampaignRecord> CONSTRAINT_F = Internal.createUniqueKey(Campaign.CAMPAIGN, DSL.name("CONSTRAINT_F"), new TableField[] { Campaign.CAMPAIGN.ID }, true);
    public static final UniqueKey<CptQmxingIdeaRecord> CONSTRAINT_C6 = Internal.createUniqueKey(CptQmxingIdea.CPT_QMXING_IDEA, DSL.name("CONSTRAINT_C6"), new TableField[] { CptQmxingIdea.CPT_QMXING_IDEA.ID }, true);
    public static final UniqueKey<CptQmxingPackageRecord> CONSTRAINT_C68 = Internal.createUniqueKey(CptQmxingPackage.CPT_QMXING_PACKAGE, DSL.name("CONSTRAINT_C68"), new TableField[] { CptQmxingPackage.CPT_QMXING_PACKAGE.ID }, true);
    public static final UniqueKey<CptQmxingPackageDetailRecord> CONSTRAINT_CEB = Internal.createUniqueKey(CptQmxingPackageDetail.CPT_QMXING_PACKAGE_DETAIL, DSL.name("CONSTRAINT_CEB"), new TableField[] { CptQmxingPackageDetail.CPT_QMXING_PACKAGE_DETAIL.ID }, true);
    public static final UniqueKey<CreativeRecord> CONSTRAINT_6 = Internal.createUniqueKey(Creative.CREATIVE, DSL.name("CONSTRAINT_6"), new TableField[] { Creative.CREATIVE.ID }, true);
    public static final UniqueKey<DownloadUrlDetailRecord> CONSTRAINT_4 = Internal.createUniqueKey(DownloadUrlDetail.DOWNLOAD_URL_DETAIL, DSL.name("CONSTRAINT_4"), new TableField[] { DownloadUrlDetail.DOWNLOAD_URL_DETAIL.ID }, true);
    public static final UniqueKey<DspIdeaRecord> CONSTRAINT_1B = Internal.createUniqueKey(DspIdea.DSP_IDEA, DSL.name("CONSTRAINT_1B"), new TableField[] { DspIdea.DSP_IDEA.ID }, true);
    public static final UniqueKey<MaterialAllocationHistoryRecord> CONSTRAINT_C3 = Internal.createUniqueKey(MaterialAllocationHistory.MATERIAL_ALLOCATION_HISTORY, DSL.name("CONSTRAINT_C3"), new TableField[] { MaterialAllocationHistory.MATERIAL_ALLOCATION_HISTORY.ID }, true);
    public static final UniqueKey<MicroIdeaRecord> CONSTRAINT_50C = Internal.createUniqueKey(MicroIdea.MICRO_IDEA, DSL.name("CONSTRAINT_50C"), new TableField[] { MicroIdea.MICRO_IDEA.ID }, true);
    public static final UniqueKey<PendingVideoMaterialRecord> CONSTRAINT_C68B = Internal.createUniqueKey(PendingVideoMaterial.PENDING_VIDEO_MATERIAL, DSL.name("CONSTRAINT_C68B"), new TableField[] { PendingVideoMaterial.PENDING_VIDEO_MATERIAL.ID }, true);
    public static final UniqueKey<PictureLibRecord> CONSTRAINT_B4 = Internal.createUniqueKey(PictureLib.PICTURE_LIB, DSL.name("CONSTRAINT_B4"), new TableField[] { PictureLib.PICTURE_LIB.ID }, true);
    public static final UniqueKey<QualityCheckRecord> CONSTRAINT_D = Internal.createUniqueKey(QualityCheck.QUALITY_CHECK, DSL.name("CONSTRAINT_D"), new TableField[] { QualityCheck.QUALITY_CHECK.ID }, true);
    public static final UniqueKey<QualityCheckAuditCampaignRecord> CONSTRAINT_C0 = Internal.createUniqueKey(QualityCheckAuditCampaign.QUALITY_CHECK_AUDIT_CAMPAIGN, DSL.name("CONSTRAINT_C0"), new TableField[] { QualityCheckAuditCampaign.QUALITY_CHECK_AUDIT_CAMPAIGN.ID }, true);
    public static final UniqueKey<QualityCheckAuditCreativeRecord> CONSTRAINT_80 = Internal.createUniqueKey(QualityCheckAuditCreative.QUALITY_CHECK_AUDIT_CREATIVE, DSL.name("CONSTRAINT_80"), new TableField[] { QualityCheckAuditCreative.QUALITY_CHECK_AUDIT_CREATIVE.ID }, true);
    public static final UniqueKey<QualityCheckCampaignSnapshotRecord> CONSTRAINT_27 = Internal.createUniqueKey(QualityCheckCampaignSnapshot.QUALITY_CHECK_CAMPAIGN_SNAPSHOT, DSL.name("CONSTRAINT_27"), new TableField[] { QualityCheckCampaignSnapshot.QUALITY_CHECK_CAMPAIGN_SNAPSHOT.ID }, true);
    public static final UniqueKey<QualityCheckCreativeSnapshotRecord> CONSTRAINT_EE = Internal.createUniqueKey(QualityCheckCreativeSnapshot.QUALITY_CHECK_CREATIVE_SNAPSHOT, DSL.name("CONSTRAINT_EE"), new TableField[] { QualityCheckCreativeSnapshot.QUALITY_CHECK_CREATIVE_SNAPSHOT.ID }, true);
    public static final UniqueKey<SitePageRecord> CONSTRAINT_E0 = Internal.createUniqueKey(SitePage.SITE_PAGE, DSL.name("CONSTRAINT_E0"), new TableField[] { SitePage.SITE_PAGE.ID }, true);
    public static final UniqueKey<UserInfoConfigRecord> CONSTRAINT_1 = Internal.createUniqueKey(UserInfoConfig.USER_INFO_CONFIG, DSL.name("CONSTRAINT_1"), new TableField[] { UserInfoConfig.USER_INFO_CONFIG.USER_ID }, true);
    public static final UniqueKey<UserLogoRecord> CONSTRAINT_14 = Internal.createUniqueKey(UserLogo.USER_LOGO, DSL.name("CONSTRAINT_14"), new TableField[] { UserLogo.USER_LOGO.ID }, true);
    public static final UniqueKey<VideoRecord> CONSTRAINT_6B = Internal.createUniqueKey(Video.VIDEO, DSL.name("CONSTRAINT_6B"), new TableField[] { Video.VIDEO.ID }, true);
    public static final UniqueKey<VideoCommentRecord> CONSTRAINT_B = Internal.createUniqueKey(VideoComment.VIDEO_COMMENT, DSL.name("CONSTRAINT_B"), new TableField[] { VideoComment.VIDEO_COMMENT.ID }, true);
    public static final UniqueKey<VideoExchangeOrderRecord> CONSTRAINT_DA = Internal.createUniqueKey(VideoExchangeOrder.VIDEO_EXCHANGE_ORDER, DSL.name("CONSTRAINT_DA"), new TableField[] { VideoExchangeOrder.VIDEO_EXCHANGE_ORDER.ID }, true);
    public static final UniqueKey<WordPackageRecord> CONSTRAINT_3 = Internal.createUniqueKey(WordPackage.WORD_PACKAGE, DSL.name("CONSTRAINT_3"), new TableField[] { WordPackage.WORD_PACKAGE.ID }, true);
    public static final UniqueKey<WordPackageDetailRecord> CONSTRAINT_2 = Internal.createUniqueKey(WordPackageDetail.WORD_PACKAGE_DETAIL, DSL.name("CONSTRAINT_2"), new TableField[] { WordPackageDetail.WORD_PACKAGE_DETAIL.ID }, true);
}
