/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_dict.tables;


import com.tengzhe.jooq.data.audit_dict.AuditDict;
import com.tengzhe.jooq.data.audit_dict.Keys;
import com.tengzhe.jooq.data.audit_dict.tables.records.AuditSimilarWordRecord;

import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.15.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditSimilarWord extends TableImpl<AuditSimilarWordRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>audit_dict.audit_similar_word</code>
     */
    public static final AuditSimilarWord AUDIT_SIMILAR_WORD = new AuditSimilarWord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditSimilarWordRecord> getRecordType() {
        return AuditSimilarWordRecord.class;
    }

    /**
     * The column <code>audit_dict.audit_similar_word.id</code>.
     */
    public final TableField<AuditSimilarWordRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.operator_id</code>.
     */
    public final TableField<AuditSimilarWordRecord, Long> OPERATOR_ID = createField(DSL.name("operator_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.source</code>.
     */
    public final TableField<AuditSimilarWordRecord, Integer> SOURCE = createField(DSL.name("source"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.original_word</code>.
     */
    public final TableField<AuditSimilarWordRecord, String> ORIGINAL_WORD = createField(DSL.name("original_word"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.similar_word</code>.
     */
    public final TableField<AuditSimilarWordRecord, String> SIMILAR_WORD = createField(DSL.name("similar_word"), SQLDataType.VARCHAR(4096).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.status</code>.
     */
    public final TableField<AuditSimilarWordRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.remark</code>.
     */
    public final TableField<AuditSimilarWordRecord, String> REMARK = createField(DSL.name("remark"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.extra_data</code>.
     */
    public final TableField<AuditSimilarWordRecord, String> EXTRA_DATA = createField(DSL.name("extra_data"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.create_time</code>.
     */
    public final TableField<AuditSimilarWordRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>audit_dict.audit_similar_word.modify_time</code>.
     */
    public final TableField<AuditSimilarWordRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    private AuditSimilarWord(Name alias, Table<AuditSimilarWordRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditSimilarWord(Name alias, Table<AuditSimilarWordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_dict.audit_similar_word</code> table
     * reference
     */
    public AuditSimilarWord(String alias) {
        this(DSL.name(alias), AUDIT_SIMILAR_WORD);
    }

    /**
     * Create an aliased <code>audit_dict.audit_similar_word</code> table
     * reference
     */
    public AuditSimilarWord(Name alias) {
        this(alias, AUDIT_SIMILAR_WORD);
    }

    /**
     * Create a <code>audit_dict.audit_similar_word</code> table reference
     */
    public AuditSimilarWord() {
        this(DSL.name("audit_similar_word"), null);
    }

    public <O extends Record> AuditSimilarWord(Table<O> child, ForeignKey<O, AuditSimilarWordRecord> key) {
        super(child, key, AUDIT_SIMILAR_WORD);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : AuditDict.AUDIT_DICT;
    }

    @Override
    public Identity<AuditSimilarWordRecord, Long> getIdentity() {
        return (Identity<AuditSimilarWordRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditSimilarWordRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    @Override
    public AuditSimilarWord as(String alias) {
        return new AuditSimilarWord(DSL.name(alias), this);
    }

    @Override
    public AuditSimilarWord as(Name alias) {
        return new AuditSimilarWord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditSimilarWord rename(String name) {
        return new AuditSimilarWord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditSimilarWord rename(Name name) {
        return new AuditSimilarWord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, Integer, String, String, Integer, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
