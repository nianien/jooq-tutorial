/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit.tables.records;


import com.tengzhe.jooq.data.audit.tables.UserInfoConfig;

import java.util.Date;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoConfigRecord extends UpdatableRecordImpl<UserInfoConfigRecord> implements Record8<Long, Long, Long, Long, Long, Date, Date, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>audit.user_info_config.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>audit.user_info_config.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>audit.user_info_config.userid</code>.
     */
    public void setUserid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>audit.user_info_config.userid</code>.
     */
    public Long getUserid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>audit.user_info_config.priority</code>.
     */
    public void setPriority(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>audit.user_info_config.priority</code>.
     */
    public Long getPriority() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>audit.user_info_config.max_version</code>.
     */
    public void setMaxVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>audit.user_info_config.max_version</code>.
     */
    public Long getMaxVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>audit.user_info_config.min_version</code>.
     */
    public void setMinVersion(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>audit.user_info_config.min_version</code>.
     */
    public Long getMinVersion() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>audit.user_info_config.create_time</code>.
     */
    public void setCreateTime(Date value) {
        set(5, value);
    }

    /**
     * Getter for <code>audit.user_info_config.create_time</code>.
     */
    public Date getCreateTime() {
        return (Date) get(5);
    }

    /**
     * Setter for <code>audit.user_info_config.modify_time</code>.
     */
    public void setModifyTime(Date value) {
        set(6, value);
    }

    /**
     * Getter for <code>audit.user_info_config.modify_time</code>.
     */
    public Date getModifyTime() {
        return (Date) get(6);
    }

    /**
     * Setter for <code>audit.user_info_config.auditor_id</code>.
     */
    public void setAuditorId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>audit.user_info_config.auditor_id</code>.
     */
    public Long getAuditorId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, Long, Long, Date, Date, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, Long, Long, Date, Date, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserInfoConfig.USER_INFO_CONFIG.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserInfoConfig.USER_INFO_CONFIG.USERID;
    }

    @Override
    public Field<Long> field3() {
        return UserInfoConfig.USER_INFO_CONFIG.PRIORITY;
    }

    @Override
    public Field<Long> field4() {
        return UserInfoConfig.USER_INFO_CONFIG.MAX_VERSION;
    }

    @Override
    public Field<Long> field5() {
        return UserInfoConfig.USER_INFO_CONFIG.MIN_VERSION;
    }

    @Override
    public Field<Date> field6() {
        return UserInfoConfig.USER_INFO_CONFIG.CREATE_TIME;
    }

    @Override
    public Field<Date> field7() {
        return UserInfoConfig.USER_INFO_CONFIG.MODIFY_TIME;
    }

    @Override
    public Field<Long> field8() {
        return UserInfoConfig.USER_INFO_CONFIG.AUDITOR_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserid();
    }

    @Override
    public Long component3() {
        return getPriority();
    }

    @Override
    public Long component4() {
        return getMaxVersion();
    }

    @Override
    public Long component5() {
        return getMinVersion();
    }

    @Override
    public Date component6() {
        return getCreateTime();
    }

    @Override
    public Date component7() {
        return getModifyTime();
    }

    @Override
    public Long component8() {
        return getAuditorId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserid();
    }

    @Override
    public Long value3() {
        return getPriority();
    }

    @Override
    public Long value4() {
        return getMaxVersion();
    }

    @Override
    public Long value5() {
        return getMinVersion();
    }

    @Override
    public Date value6() {
        return getCreateTime();
    }

    @Override
    public Date value7() {
        return getModifyTime();
    }

    @Override
    public Long value8() {
        return getAuditorId();
    }

    @Override
    public UserInfoConfigRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value2(Long value) {
        setUserid(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value3(Long value) {
        setPriority(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value4(Long value) {
        setMaxVersion(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value5(Long value) {
        setMinVersion(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value6(Date value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value7(Date value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord value8(Long value) {
        setAuditorId(value);
        return this;
    }

    @Override
    public UserInfoConfigRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, Date value6, Date value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserInfoConfigRecord
     */
    public UserInfoConfigRecord() {
        super(UserInfoConfig.USER_INFO_CONFIG);
    }

    /**
     * Create a detached, initialised UserInfoConfigRecord
     */
    public UserInfoConfigRecord(Long id, Long userid, Long priority, Long maxVersion, Long minVersion, Date createTime, Date modifyTime, Long auditorId) {
        super(UserInfoConfig.USER_INFO_CONFIG);

        setId(id);
        setUserid(userid);
        setPriority(priority);
        setMaxVersion(maxVersion);
        setMinVersion(minVersion);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        setAuditorId(auditorId);
    }
}
