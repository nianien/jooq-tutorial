/*
 * This file is generated by jOOQ.
 */
package com.tengzhe.jooq.data.audit_dict.tables;


import com.tengzhe.jooq.data.audit_dict.AuditDict;
import com.tengzhe.jooq.data.audit_dict.Keys;
import com.tengzhe.jooq.data.audit_dict.tables.records.AuditWordRuleRecord;

import java.util.Arrays;
import java.util.Date;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row18;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditWordRule extends TableImpl<AuditWordRuleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>audit_dict.audit_word_rule</code>
     */
    public static final AuditWordRule AUDIT_WORD_RULE = new AuditWordRule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuditWordRuleRecord> getRecordType() {
        return AuditWordRuleRecord.class;
    }

    /**
     * The column <code>audit_dict.audit_word_rule.id</code>.
     */
    public final TableField<AuditWordRuleRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.source</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> SOURCE = createField(DSL.name("source"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.operator_id</code>.
     */
    public final TableField<AuditWordRuleRecord, Long> OPERATOR_ID = createField(DSL.name("operator_id"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.word</code>.
     */
    public final TableField<AuditWordRuleRecord, String> WORD = createField(DSL.name("word"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.word_type</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> WORD_TYPE = createField(DSL.name("word_type"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.match_type</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> MATCH_TYPE = createField(DSL.name("match_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.entity_type</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> ENTITY_TYPE = createField(DSL.name("entity_type"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'-1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.exclude_words</code>.
     */
    public final TableField<AuditWordRuleRecord, String> EXCLUDE_WORDS = createField(DSL.name("exclude_words"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.exclude_users</code>.
     */
    public final TableField<AuditWordRuleRecord, String> EXCLUDE_USERS = createField(DSL.name("exclude_users"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.exclude_customers</code>.
     */
    public final TableField<AuditWordRuleRecord, String> EXCLUDE_CUSTOMERS = createField(DSL.name("exclude_customers"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.industries</code>.
     */
    public final TableField<AuditWordRuleRecord, String> INDUSTRIES = createField(DSL.name("industries"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("'0'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.grade</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> GRADE = createField(DSL.name("grade"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("1", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.status</code>.
     */
    public final TableField<AuditWordRuleRecord, Integer> STATUS = createField(DSL.name("status"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("'1'", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.remark</code>.
     */
    public final TableField<AuditWordRuleRecord, String> REMARK = createField(DSL.name("remark"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.risk_tag</code>.
     */
    public final TableField<AuditWordRuleRecord, String> RISK_TAG = createField(DSL.name("risk_tag"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.extra_data</code>.
     */
    public final TableField<AuditWordRuleRecord, String> EXTRA_DATA = createField(DSL.name("extra_data"), SQLDataType.VARCHAR(1024).nullable(false).defaultValue(DSL.field("''", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>audit_dict.audit_word_rule.create_time</code>.
     */
    public final TableField<AuditWordRuleRecord, Date> CREATE_TIME = createField(DSL.name("create_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "", new LocalDateTime2DateConverter());

    /**
     * The column <code>audit_dict.audit_word_rule.modify_time</code>.
     */
    public final TableField<AuditWordRuleRecord, Date> MODIFY_TIME = createField(DSL.name("modify_time"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "", new LocalDateTime2DateConverter());

    private AuditWordRule(Name alias, Table<AuditWordRuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditWordRule(Name alias, Table<AuditWordRuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>audit_dict.audit_word_rule</code> table reference
     */
    public AuditWordRule(String alias) {
        this(DSL.name(alias), AUDIT_WORD_RULE);
    }

    /**
     * Create an aliased <code>audit_dict.audit_word_rule</code> table reference
     */
    public AuditWordRule(Name alias) {
        this(alias, AUDIT_WORD_RULE);
    }

    /**
     * Create a <code>audit_dict.audit_word_rule</code> table reference
     */
    public AuditWordRule() {
        this(DSL.name("audit_word_rule"), null);
    }

    public <O extends Record> AuditWordRule(Table<O> child, ForeignKey<O, AuditWordRuleRecord> key) {
        super(child, key, AUDIT_WORD_RULE);
    }

    @Override
    public Schema getSchema() {
        return AuditDict.AUDIT_DICT;
    }

    @Override
    public Identity<AuditWordRuleRecord, Long> getIdentity() {
        return (Identity<AuditWordRuleRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<AuditWordRuleRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_E;
    }

    @Override
    public List<UniqueKey<AuditWordRuleRecord>> getKeys() {
        return Arrays.<UniqueKey<AuditWordRuleRecord>>asList(Keys.CONSTRAINT_E);
    }

    @Override
    public AuditWordRule as(String alias) {
        return new AuditWordRule(DSL.name(alias), this);
    }

    @Override
    public AuditWordRule as(Name alias) {
        return new AuditWordRule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditWordRule rename(String name) {
        return new AuditWordRule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AuditWordRule rename(Name name) {
        return new AuditWordRule(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row18<Long, Integer, Long, String, Integer, Integer, Integer, String, String, String, String, Integer, Integer, String, String, String, Date, Date> fieldsRow() {
        return (Row18) super.fieldsRow();
    }
}
